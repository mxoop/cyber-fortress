const V=Object.entries,et=Object.fromEntries,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:n})=>n),bt=et(V(JSON.parse("{\"/\":{\"documentCount\":68,\"nextId\":68,\"documentIds\":{\"0\":\"1\",\"1\":\"2\",\"2\":\"2@0\",\"3\":\"3\",\"4\":\"3#spring-boot项目搭建\",\"5\":\"3#环境依赖\",\"6\":\"3#application-yml\",\"7\":\"3#logback-spirng-xml\",\"8\":\"3#docker-compose-部署elk\",\"9\":\"3#logstash配置文件\",\"10\":\"3#docker-compose-yml\",\"11\":\"3#完结效果\",\"12\":\"3#elasticsearch-索引周期管理\",\"13\":\"3#创建索引策略\",\"14\":\"3#创建索引模板\",\"15\":\"3#创建索引\",\"16\":\"3@0\",\"17\":\"4\",\"18\":\"4#docker\",\"19\":\"4#启动\",\"20\":\"4@0\",\"21\":\"5\",\"22\":\"5#docker-registry节点搭建\",\"23\":\"5#docker环境搭建\",\"24\":\"5#docker-registry搭建\",\"25\":\"5#克隆虚拟机\",\"26\":\"5#测试效果\",\"27\":\"5#docker-swarm-搭建集群\",\"28\":\"5#环境准备\",\"29\":\"5#创建集群\",\"30\":\"5#部署服务\",\"31\":\"5#常用命令\",\"32\":\"5@0\",\"33\":\"6\",\"34\":\"6#elasticsearch\",\"35\":\"6#kibana\",\"36\":\"6#logstash\",\"37\":\"6#启动脚本\",\"38\":\"6#内存配置\",\"39\":\"6@0\",\"40\":\"7\",\"41\":\"7#gitlab配置\",\"42\":\"7#更换gitlab-ip地址\",\"43\":\"7#修改端口\",\"44\":\"7#常用命令\",\"45\":\"7#备份gitlab\",\"46\":\"7#创建备份文件\",\"47\":\"7#修改备份目录\",\"48\":\"7#设置自动备份机制\",\"49\":\"7#设置备份过期时间\",\"50\":\"7#恢复备份文件\",\"51\":\"7@0\",\"52\":\"8\",\"53\":\"8#下载安装\",\"54\":\"8#loki\",\"55\":\"8#promtail\",\"56\":\"8#grafana\",\"57\":\"8#配置启动\",\"58\":\"8#loki配置\",\"59\":\"8#promtail配置\",\"60\":\"8#grafana配置\",\"61\":\"8#启动命令\",\"62\":\"8#启动脚本\",\"63\":\"8#loki-sh\",\"64\":\"8#promtail-sh\",\"65\":\"8#访问-数据源配置\",\"66\":\"8@0\",\"67\":\"9\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[2,11],\"1\":[2],\"2\":[null,null,1],\"3\":[10],\"4\":[5],\"5\":[2,28],\"6\":[3,19],\"7\":[5,182],\"8\":[6],\"9\":[2,69],\"10\":[5,120],\"11\":[2],\"12\":[5,35],\"13\":[3,26],\"14\":[3,33],\"15\":[2,19],\"16\":[null,null,4],\"17\":[5,10],\"18\":[1,47],\"19\":[1,23],\"20\":[null,null,3],\"21\":[6,117],\"22\":[5],\"23\":[3,42],\"24\":[4,82],\"25\":[2,12],\"26\":[2,54],\"27\":[5,16],\"28\":[2,36],\"29\":[2,89],\"30\":[2,33],\"31\":[1,43],\"32\":[null,null,3],\"33\":[4,7],\"34\":[1,130],\"35\":[1,83],\"36\":[1,118],\"37\":[2,88],\"38\":[2,29],\"39\":[null,null,4],\"40\":[4,32],\"41\":[2],\"42\":[5,31],\"43\":[2,69],\"44\":[1,36],\"45\":[2],\"46\":[2,38],\"47\":[3,42],\"48\":[4,145],\"49\":[4,55],\"50\":[2,84],\"51\":[null,null,3],\"52\":[5],\"53\":[1],\"54\":[1,21],\"55\":[1,22],\"56\":[1,31],\"57\":[2],\"58\":[2,294],\"59\":[2,111],\"60\":[2,100],\"61\":[2,40],\"62\":[2],\"63\":[0,58],\"64\":[3,61],\"65\":[4,29],\"66\":[null,null,3],\"67\":[0,4]},\"averageFieldLength\":[2.787018218699393,53.701989125158526,0.891957110054125],\"storedFields\":{\"0\":{\"h\":\"介绍页\",\"t\":[\"将你的个人介绍和档案放置在此处。\"]},\"1\":{\"h\":\"部署篇\"},\"2\":{\"c\":[\"deploy\"]},\"3\":{\"h\":\"Spring Boot 整合 ELK（基于docker环境）\"},\"4\":{\"h\":\"spring boot项目搭建\"},\"5\":{\"h\":\"环境依赖\",\"t\":[\"<parent> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-parent</artifactId> <version>2.3.0.RELEASE</version> <relativePath/> <!-- lookup parent from repository --> </parent> <dependency> <groupId>net.logstash.logback</groupId> <artifactId>logstash-logback-encoder</artifactId> <version>5.3</version> </dependency> \"]},\"6\":{\"h\":\"application.yml\",\"t\":[\"spring: application: name: fort-brick-elk server: port: 8080 logging: level: root: info logstash: host: 192.168.91.131 \"]},\"7\":{\"h\":\"logback-spirng.xml\",\"t\":[\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?> <configuration> <!--引用默认日志配置--> <include resource=\\\"org/springframework/boot/logging/logback/defaults.xml\\\"/> <!--使用默认的控制台日志输出实现--> <include resource=\\\"org/springframework/boot/logging/logback/console-appender.xml\\\"/> <!--应用名称--> <springProperty scope=\\\"context\\\" name=\\\"APP_NAME\\\" source=\\\"spring.application.name\\\" defaultValue=\\\"springBoot\\\"/> <!--日志文件保存路径--> <property name=\\\"LOG_FILE_PATH\\\" value=\\\"${LOG_FILE:-${LOG_PATH:-${LOG_TEMP:-${java.io.tmpdir:-/tmp}}}/logs}\\\"/> <!--LogStash访问host--> <springProperty name=\\\"LOG_STASH_HOST\\\" scope=\\\"context\\\" source=\\\"logstash.host\\\" defaultValue=\\\"localhost\\\"/> <!--DEBUG日志输出到文件--> <appender name=\\\"FILE_DEBUG\\\" class=\\\"ch.qos.logback.core.rolling.RollingFileAppender\\\"> <!--输出DEBUG以上级别日志--> <filter class=\\\"ch.qos.logback.classic.filter.ThresholdFilter\\\"> <level>DEBUG</level> </filter> <encoder> <!--设置为默认的文件日志格式--> <pattern>${FILE_LOG_PATTERN}</pattern> <charset>UTF-8</charset> </encoder> <rollingPolicy class=\\\"ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy\\\"> <!--设置文件命名格式--> <fileNamePattern>${LOG_FILE_PATH}/debug/${APP_NAME}-%d{yyyy-MM-dd}-%i.log</fileNamePattern> <!--设置日志文件大小，超过就重新生成文件，默认10M--> <maxFileSize>${LOG_FILE_MAX_SIZE:-10MB}</maxFileSize> <!--日志文件保留天数，默认30天--> <maxHistory>${LOG_FILE_MAX_HISTORY:-30}</maxHistory> </rollingPolicy> </appender> <!--ERROR日志输出到文件--> <appender name=\\\"FILE_ERROR\\\" class=\\\"ch.qos.logback.core.rolling.RollingFileAppender\\\"> <!--只输出ERROR级别的日志--> <filter class=\\\"ch.qos.logback.classic.filter.LevelFilter\\\"> <level>ERROR</level> <onMatch>ACCEPT</onMatch> <onMismatch>DENY</onMismatch> </filter> <encoder> <!--设置为默认的文件日志格式--> <pattern>${FILE_LOG_PATTERN}</pattern> <charset>UTF-8</charset> </encoder> <rollingPolicy class=\\\"ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy\\\"> <!--设置文件命名格式--> <fileNamePattern>${LOG_FILE_PATH}/error/${APP_NAME}-%d{yyyy-MM-dd}-%i.log</fileNamePattern> <!--设置日志文件大小，超过就重新生成文件，默认10M--> <maxFileSize>${LOG_FILE_MAX_SIZE:-10MB}</maxFileSize> <!--日志文件保留天数，默认30天--> <maxHistory>${LOG_FILE_MAX_HISTORY:-30}</maxHistory> </rollingPolicy> </appender> <!--DEBUG日志输出到LogStash--> <appender name=\\\"LOG_STASH_DEBUG\\\" class=\\\"net.logstash.logback.appender.LogstashTcpSocketAppender\\\"> <filter class=\\\"ch.qos.logback.classic.filter.ThresholdFilter\\\"> <level>DEBUG</level> </filter> <destination>${LOG_STASH_HOST}:4570</destination> <encoder charset=\\\"UTF-8\\\" class=\\\"net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder\\\"> <providers> <timestamp> <timeZone>Asia/Shanghai</timeZone> </timestamp> <!--自定义日志输出格式--> <pattern> <pattern> { \\\"project\\\": \\\"fortress\\\", \\\"level\\\": \\\"%level\\\", \\\"service\\\": \\\"${APP_NAME:-}\\\", \\\"pid\\\": \\\"${PID:-}\\\", \\\"thread\\\": \\\"%thread\\\", \\\"class\\\": \\\"%logger\\\", \\\"message\\\": \\\"%message\\\", \\\"stack_trace\\\": \\\"%exception{20}\\\" } </pattern> </pattern> </providers> </encoder> </appender> <!--ERROR日志输出到LogStash--> <appender name=\\\"LOG_STASH_ERROR\\\" class=\\\"net.logstash.logback.appender.LogstashTcpSocketAppender\\\"> <filter class=\\\"ch.qos.logback.classic.filter.LevelFilter\\\"> <level>ERROR</level> <onMatch>ACCEPT</onMatch> <onMismatch>DENY</onMismatch> </filter> <destination>${LOG_STASH_HOST}:4571</destination> <encoder charset=\\\"UTF-8\\\" class=\\\"net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder\\\"> <providers> <timestamp> <timeZone>Asia/Shanghai</timeZone> </timestamp> <!--自定义日志输出格式--> <pattern> <pattern> { \\\"project\\\": \\\"fortress\\\", \\\"level\\\": \\\"%level\\\", \\\"service\\\": \\\"${APP_NAME:-}\\\", \\\"pid\\\": \\\"${PID:-}\\\", \\\"thread\\\": \\\"%thread\\\", \\\"class\\\": \\\"%logger\\\", \\\"message\\\": \\\"%message\\\", \\\"stack_trace\\\": \\\"%exception{20}\\\" } </pattern> </pattern> </providers> </encoder> </appender> <!--业务日志输出到LogStash--> <appender name=\\\"LOG_STASH_BUSINESS\\\" class=\\\"net.logstash.logback.appender.LogstashTcpSocketAppender\\\"> <destination>${LOG_STASH_HOST}:4572</destination> <encoder charset=\\\"UTF-8\\\" class=\\\"net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder\\\"> <providers> <timestamp> <timeZone>Asia/Shanghai</timeZone> </timestamp> <!--自定义日志输出格式--> <pattern> <pattern> { \\\"project\\\": \\\"fortress\\\", \\\"level\\\": \\\"%level\\\", \\\"service\\\": \\\"${APP_NAME:-}\\\", \\\"pid\\\": \\\"${PID:-}\\\", \\\"thread\\\": \\\"%thread\\\", \\\"class\\\": \\\"%logger\\\", \\\"message\\\": \\\"%message\\\", \\\"stack_trace\\\": \\\"%exception{20}\\\" } </pattern> </pattern> </providers> </encoder> </appender> <!--接口访问记录日志输出到LogStash--> <appender name=\\\"LOG_STASH_RECORD\\\" class=\\\"net.logstash.logback.appender.LogstashTcpSocketAppender\\\"> <destination>${LOG_STASH_HOST}:4573</destination> <encoder charset=\\\"UTF-8\\\" class=\\\"net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder\\\"> <providers> <timestamp> <timeZone>Asia/Shanghai</timeZone> </timestamp> <!--自定义日志输出格式--> <pattern> <pattern> { \\\"project\\\": \\\"fortress\\\", \\\"level\\\": \\\"%level\\\", \\\"service\\\": \\\"${APP_NAME:-}\\\", \\\"class\\\": \\\"%logger\\\", \\\"message\\\": \\\"%message\\\" } </pattern> </pattern> </providers> </encoder> </appender> <!--控制框架输出日志--> <logger name=\\\"org.slf4j\\\" level=\\\"INFO\\\"/> <logger name=\\\"springfox\\\" level=\\\"INFO\\\"/> <logger name=\\\"io.swagger\\\" level=\\\"INFO\\\"/> <logger name=\\\"org.springframework\\\" level=\\\"INFO\\\"/> <logger name=\\\"org.hibernate.validator\\\" level=\\\"INFO\\\"/> <root level=\\\"DEBUG\\\"> <appender-ref ref=\\\"CONSOLE\\\"/> <appender-ref ref=\\\"FILE_DEBUG\\\"/> <appender-ref ref=\\\"FILE_ERROR\\\"/> <appender-ref ref=\\\"LOG_STASH_DEBUG\\\"/> <appender-ref ref=\\\"LOG_STASH_ERROR\\\"/> </root> <logger name=\\\"com.mxoop.fortress.fort.controller.TestController\\\" level=\\\"DEBUG\\\"> <appender-ref ref=\\\"LOG_STASH_RECORD\\\"/> </logger> <logger name=\\\"com.mxoop.fortress.fort.controller.TestController\\\" level=\\\"DEBUG\\\"> <appender-ref ref=\\\"LOG_STASH_BUSINESS\\\"/> </logger> </configuration> \"]},\"8\":{\"h\":\"docker-compose 部署elk\"},\"9\":{\"h\":\"logstash配置文件\",\"t\":[\"上传到docker-compose.yml文件中logstash挂载目录（/mydata/elk/logstash/logstash.conf）\",\"logstash.conf\",\"input { tcp { mode => \\\"server\\\" host => \\\"0.0.0.0\\\" port => 4570 codec => json_lines type => \\\"debug\\\" } tcp { mode => \\\"server\\\" host => \\\"0.0.0.0\\\" port => 4571 codec => json_lines type => \\\"error\\\" } tcp { mode => \\\"server\\\" host => \\\"0.0.0.0\\\" port => 4572 codec => json_lines type => \\\"business\\\" } tcp { mode => \\\"server\\\" host => \\\"0.0.0.0\\\" port => 4573 codec => json_lines type => \\\"record\\\" } } filter{ if [type] == \\\"record\\\" { mutate { remove_field => \\\"port\\\" remove_field => \\\"host\\\" remove_field => \\\"@version\\\" } json { source => \\\"message\\\" remove_field => [\\\"message\\\"] } } } output { elasticsearch { hosts => \\\"es:9200\\\" index => \\\"fortress-%{type}-%{+YYYY.MM.dd}\\\" } } \"]},\"10\":{\"h\":\"docker-compose.yml\",\"t\":[\"version: '3' services: elasticsearch: image: elasticsearch:7.6.2 container_name: elk_e environment: - \\\"cluster.name=elasticsearch\\\" #设置集群名称为elasticsearch - \\\"discovery.type=single-node\\\" #以单一节点模式启动 - \\\"ES_JAVA_OPTS=-Xms512m -Xmx512m\\\" #设置使用jvm内存大小 volumes: - /mydata/elk/elasticsearch/plugins:/usr/share/elasticsearch/plugins #插件文件挂载 - /mydata/elk/elasticsearch/data:/usr/share/elasticsearch/data #数据文件挂载 ports: - 9201:9200 kibana: image: kibana:7.6.2 container_name: elk_k links: - elasticsearch:es #可以用es这个域名访问elasticsearch服务 depends_on: - elasticsearch #kibana在elasticsearch启动之后再启动 environment: - \\\"elasticsearch.hosts=http://es:9200\\\" #设置访问elasticsearch的地址 ports: - 5602:5601 logstash: image: logstash:7.6.2 container_name: elk_l volumes: - /mydata/elk/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf #挂载logstash的配置文件 depends_on: - elasticsearch #kibana在elasticsearch启动之后再启动 links: - elasticsearch:es #可以用es这个域名访问elasticsearch服务 ports: - 4570:4570 - 4571:4571 - 4572:4572 - 4573:4573 \",\"安装注意\",\"启动命令\",\"docker-compose up -d \",\"第一次启动可能会发现Elasticsearch无法启动，那是因为/usr/share/elasticsearch/data目录没有访问权限，只需要修改/mydata/elk/elasticsearch/data目录的权限，再重新启动\",\"chmod 777 /mydata/elk/elasticsearch/data/ \",\"Logstash需要安装json_lines插件。\",\"logstash-plugin install logstash-codec-json_lines \"]},\"11\":{\"h\":\"完结效果\"},\"12\":{\"h\":\"elasticsearch 索引周期管理\",\"t\":[\"通过周期管理，设置日志保留期限\",\"需按照流程创建才能使索引周期管理生效。创建索引策略 ---> 创建索引模板 ---> 创建索引\",\"要求结果：以fortress开头创建的索引，1个小时后删除。\"]},\"13\":{\"h\":\"创建索引策略\",\"t\":[\"脚本\",\"PUT _ilm/policy/ilm_policy_delete_log { \\\"policy\\\": { \\\"phases\\\": { \\\"hot\\\": { \\\"min_age\\\": \\\"0ms\\\", \\\"actions\\\": { \\\"set_priority\\\": { \\\"priority\\\": 100 } } }, \\\"delete\\\": { \\\"min_age\\\": \\\"1h\\\", \\\"actions\\\": { \\\"delete\\\": {} } } } } } \"]},\"14\":{\"h\":\"创建索引模板\",\"t\":[\"脚本\",\"PUT _template/ilm_delete_log_template { \\\"index_patterns\\\": [\\\"fortress*\\\"], \\\"settings\\\": { \\\"number_of_shards\\\": 1, \\\"number_of_replicas\\\": 1, \\\"index.lifecycle.name\\\":\\\"ilm_policy_delete_log\\\", \\\"index.lifecycle.rollover_alias\\\": \\\"fortess\\\" } } \"]},\"15\":{\"h\":\"创建索引\",\"t\":[\"创建符合索引模板匹配规则的index即可。\\\"index_patterns\\\": [\\\"fortress*\\\"]\"]},\"16\":{\"c\":[\"deploy\",\"docker\",\"日志\"]},\"17\":{\"h\":\"Linux监控之netdata部署\",\"t\":[\"官网地址：Install Netdata with Docker | Learn Netdata\"]},\"18\":{\"h\":\"docker\",\"t\":[\"docker run -d --name=netdata \\\\ --pid=host \\\\ --network=host \\\\ -v /mydata/netdata/netdataconfig:/etc/netdata \\\\ -v /mydata/netdata/netdatalib:/var/lib/netdata \\\\ -v /mydata/netdata/netdatacache:/var/cache/netdata \\\\ -v /etc/passwd:/host/etc/passwd:ro \\\\ -v /etc/group:/host/etc/group:ro \\\\ -v /etc/localtime:/etc/localtime:ro \\\\ -v /proc:/host/proc:ro \\\\ -v /sys:/host/sys:ro \\\\ -v /etc/os-release:/host/etc/os-release:ro \\\\ -v /var/log:/host/var/log:ro \\\\ -v /var/run/docker.sock:/var/run/docker.sock:ro \\\\ --restart unless-stopped \\\\ --cap-add SYS_PTRACE \\\\ --cap-add SYS_ADMIN \\\\ --security-opt apparmor=unconfined \\\\ netdata/netdata \"]},\"19\":{\"h\":\"启动\",\"t\":[\"#开启防火墙19999 firewall-cmd --zone=public --add-port=19999/tcp --permanent firewall-cmd --reload firewall-cmd --zone=public --list-ports #访问 http://IP:19999 \"]},\"20\":{\"c\":[\"deploy\",\"docker\"]},\"21\":{\"h\":\"Docker集群➕Docker Registry搭建\",\"t\":[\"环境介绍，四台虚拟机均使用桥接网络搭建\",\"hostname\",\"用途\",\"ip\",\"docker-registry\",\"搭建docker仓库\",\"192.168.0.100\",\"docker-master\",\"docker集群主节点\",\"192.168.0.101\",\"docker-worker1\",\"docker集群worker节点\",\"192.168.0.102\",\"docker-worker2\",\"docker集群worker节点\",\"192.168.0.103\",\"思路：\",\"搭建docker-registry节点，在节点中搭建docker环境，搭建registry2\",\"克隆docker-registry，修改对应的主机名以及ip地址\",\"验证其他节点能否拉取docker-registry节点的镜像\",\"使用docker swarm搭建docker集群\",\"会使用到命令\",\"#修改主机名 sudo hostnamectl set-hostname 新主机名 #设置静态IP地址 vim /etc/sysconfig/network-scripts/ifcfg-ens33 #重启网卡生效 systemctl restart network.service \",\"TYPE=Ethernet PROXY_METHOD=none BROWSER_ONLY=no BOOTPROTO=static DEFROUTE=yes IPV4_FAILURE_FATAL=no IPV6INIT=yes IPV6_AUTOCONF=yes IPV6_DEFROUTE=yes IPV6_FAILURE_FATAL=no IPV6_ADDR_GEN_MODE=stable-privacy NAME=ens33 UUID=824ec4bd-a9ae-4410-8346-17ce7f3dd111 DEVICE=ens33 ONBOOT=yes IPADDR=192.168.0.100 NETMASK=255.255.255.0 GATEWAY=192.168.0.1 DNS1=8.8.8.8 \"]},\"22\":{\"h\":\"docker-registry节点搭建\"},\"23\":{\"h\":\"docker环境搭建\",\"t\":[\"参考官网地址：Install Docker Engine on CentOS | Docker Documentation\",\"配置镜像加速\",\"vim /etc/docker/daemon.json { \\\"registry-mirrors\\\": [\\\"http://hub-mirror.c.163.com\\\"] } systemctl daemon-reload systemctl restart docker.service \"]},\"24\":{\"h\":\"docker registry搭建\",\"t\":[\"docker run -d -p 5000:5000 --restart=always -v /mydata/registry:/var/lib/registry --name registry2 registry:2.8 \",\"配置docker http注册表\",\"参考官网：\",\"测试不安全的注册表 |码头工人文档 (docker.com)\",\"为 Docker 守护程序配置远程访问 |码头工人文档\",\"echo '{ \\\"insecure-registries\\\":[\\\"192.168.0.100:5000\\\"] }' > /etc/docker/daemon.json \",\"每台虚拟机都配置docker-registry的地址，这样其他docker客户端就能拉取docker-registry的镜像了\",\"修改配置后需要使用如下命令使配置生效\",\"systemctl daemon-reload \",\"重新启动Docker服务\",\"systemctl restart docker \"]},\"25\":{\"h\":\"克隆虚拟机\",\"t\":[\"克隆docker-registry节点，修改对应主机名及IP地址\"]},\"26\":{\"h\":\"测试效果\",\"t\":[\"首先下载一个测试用的镜像busybox\",\"docker pull busybox \",\"给镜像busybox打上私有仓库的标签，并设置版本为v1.0\",\"docker tag busybox 192.168.0.100:5000/busybox:v1.0 \",\"之后推送到私有镜像仓库去\",\"docker push 192.168.0.100:5000/busybox:v1.0 \",\"在master节点拉取registry节点的镜像\",\"docker pull 192.168.0.100:5000/busybox:v1.0 \",\"到这里，docker私有仓库搭建告一段落。后续在docker集群搭建完后，配置docker-registry远程api访问，以及TLS\"]},\"27\":{\"h\":\"docker swarm 搭建集群\",\"t\":[\"官网地址：\",\"群模式入门 |码头工人文档 (docker.com)\"]},\"28\":{\"h\":\"环境准备\",\"t\":[\"在集群的每个节点都开放这三个端口\",\"# 开放 2377/tcp 端口 sudo firewall-cmd --add-port=2377/tcp --permanent # 开放 7946/tcp 和 7946/udp 端口 sudo firewall-cmd --add-port=7946/tcp --permanent sudo firewall-cmd --add-port=7946/udp --permanent # 开放 4789/udp 端口 sudo firewall-cmd --add-port=4789/udp --permanent # 重新加载防火墙规则使其生效 sudo firewall-cmd --reload \"]},\"29\":{\"h\":\"创建集群\",\"t\":[\"#在主节点执行 #docker swarm init --advertise-addr <MANAGER-IP> docker swarm init --advertise-addr 192.168.0.101 Swarm initialized: current node (dxn1zf6l61qsb1josjja83ngz) is now a manager. To add a worker to this swarm, run the following command: docker swarm join \\\\ --token SWMTKN-1-49nj1cmql0jkz5s954yi3oex3nedyz0fb0xx14ie39trti4wxv-8vxv8rssmk743ojnwacrr2e7c \\\\ 192.168.0.101:2377 To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions. \",\"将节点添加到群中\",\" #在子节点执行上面生成的命令 docker swarm join \\\\ --token SWMTKN-1-49nj1cmql0jkz5s954yi3oex3nedyz0fb0xx14ie39trti4wxv-8vxv8rssmk743ojnwacrr2e7c \\\\ 192.168.0.101:2377 \",\"查看集群节点状态\",\"[root@docker-master ~]# docker node ls ID HOSTNAME STATUS AVAILABILITY MANAGER STATUS ENGINE VERSION ep8anhf9h4uox6j00k81ixsbc * docker-master Ready Active Leader 24.0.5 xblpc7gpoztrwmg7k05d77b52 docker-worker1 Ready Active 24.0.5 og5uwjm5d50g5cv1avt525af1 docker-worker2 Ready Active 24.0.5 \"]},\"30\":{\"h\":\"部署服务\",\"t\":[\"[root@docker-registry ~]# docker pull nginx:1.25 [root@docker-registry ~]# docker tag nginx:1.25 192.168.0.100:5000/ngnix:v1.0 [root@docker-registry ~]# docker push 192.168.0.100:5000/ngnix:v1.0 [root@docker-master ~]# docker pull 192.168.0.100:5000/ngnix:v1.0 [root@docker-master ~]# docker service create --name mynginx --replicas 3 -p 8080:80 192.168.0.100:5000/ngnix:v1.0 \"]},\"31\":{\"h\":\"常用命令\",\"t\":[\"查看运行的服务列表\",\"docker service ls \",\"查看服务详细信息\",\"docker service inspect --pretty mynginx \",\"查看服务在哪些节点正在运行\",\"docker service ps mynginx \",\"移除服务\",\"docker service rm mynginx \",\"移除节点\",\"docker swarm leave #如果是主节点 docker swarm leave --force #节点离开群后，您可以在主节点：从节点列表中删除节点。 docker node rm <hostname> \"]},\"32\":{\"c\":[\"deploy\",\"docker\"]},\"33\":{\"h\":\"ELK 安装部署\",\"t\":[\"创建 es用户 。\",\"adduser es \"]},\"34\":{\"h\":\"Elasticsearch\",\"t\":[\"参考文档：\",\"重点：[Start the Elastic Stack with security enabled automatically | Elasticsearch Guide 8.10] | Elastic\",\"密码设置：[Set up minimal security for Elasticsearch | Elasticsearch Guide 8.10] | Elastic\",\"注意事项：\",\"新版本elasticsearch启动时就默认开启了ssl检查\",\"事先为ELK三个组件创建一个es用户，使用chowdn -R es:es ./${组件目录名} 赋予权限，之后都用es用户启动\",\"kibana与elastic使用命令建立关联，而logstash需要在配置文件配置http的ca证书和账户密码\",\"解压至 /usr/local 目录\",\"进入解压目录，修改config/elasticsearch.yml\",\"添加以下几行\",\"cluster.name: kwin-elk-es node.name: node-1 path.data: /usr/local/elasticsearch-8.10.1/data path.logs: /usr/local/elasticsearch-8.10.1/logs network.host: 0.0.0.0 http.port: 9200 cluster.initial_master_nodes: [\\\"node-1\\\"] http.cors.enabled: true http.cors.allow-origin: \\\"*\\\" \",\"创建对应的data、logs目录\",\"将对应安装目录权限赋予 es 用户\",\" chown -R es /usr/local/elasticsearch \",\"切换至 es 用户，后台启动。\",\"su es ./bin/elasticsearch -d \"]},\"35\":{\"h\":\"Kibana\",\"t\":[\"解压至 /usr/local/ 目录\",\"修改配置\",\"vim ./config/kibana.yml # 添加以下几行 logging.appenders.default: type: file fileName: /usr/local/kibana-8.10.1/logs/kibana.log layout: type: json server.port: 5601 server.host: 0.0.0.0 server.publicBaseUrl: \\\"http://192.168.0.194:5601\\\" #192.168.0.194为Elastic本机IP elasticsearch.hosts: ['https://192.168.0.194:9200'] i18n.locale: zh-CN \",\"文件授权\",\" chown -R es /usr/local/kibana-8.10.1 \",\"注册启用安全性kibana\",\"#参考命令 bin/elasticsearch-create-enrollment-token -s kibana --url \\\"https://192.168.0.194:9200\\\" bin/kibana-setup --enrollment-token <enrollment-token> \",\"切换用户并启动\",\"su es ./bin/kibana #后台启动 nohup ./bin/kibana & \"]},\"36\":{\"h\":\"Logstash\",\"t\":[\"解压至 /usr/local/ 目录\",\"修改配置文件\",\"cp config/logstash-sample.conf config/logstash.conf vim config/logstash.conf \",\"logstash.conf\",\"# Sample Logstash configuration for creating a simple # Beats -> Logstash -> Elasticsearch pipeline. input { tcp { mode => \\\"server\\\" host => \\\"0.0.0.0\\\" port => 4570 codec => json_lines type => \\\"debug\\\" } tcp { mode => \\\"server\\\" host => \\\"0.0.0.0\\\" port => 4571 codec => json_lines type => \\\"error\\\" } tcp { mode => \\\"server\\\" host => \\\"0.0.0.0\\\" port => 4572 codec => json_lines type => \\\"business\\\" } tcp { mode => \\\"server\\\" host => \\\"0.0.0.0\\\" port => 4573 codec => json_lines type => \\\"record\\\" } } filter { if [type] == \\\"record\\\" { mutate { remove_field => [\\\"port\\\", \\\"host\\\", \\\"@version\\\"] } json { source => \\\"message\\\" remove_field => [\\\"message\\\"] } ruby { code => 'event.set(\\\"parameter\\\", event.get(\\\"parameter\\\").to_json)' } ruby { code => 'event.set(\\\"result\\\", event.get(\\\"result\\\").to_json)' } } } output { elasticsearch { hosts => [\\\"https://192.168.0.194:9200\\\"] #elastic 主机IP地址 index => \\\"kwin-%{type}-%{+YYYY.MM.dd}\\\" #索引匹配规则 ssl => true cacert => \\\"/usr/local/elasticsearch-8.10.1/config/certs/http_ca.crt\\\" #elastic 默认安全目录 user => \\\"elastic\\\" #elastic 用户名 password => \\\"S4dcMP3FsEKEmQWTtWsA\\\" #elastic 用户密码 } } \",\"启动\",\" nohup ./bin/logstash -f ./config/logstash.conf & \"]},\"37\":{\"h\":\"启动脚本\",\"t\":[\"脚本目录：/etc/init.d\",\"elasticsearch\",\"#!/bin/sh # chkconfig: - 85 15 #description: elasticsearch export ES_HOME=/usr/local/elasticsearch-6.2.3 case \\\"$1\\\" in start) su es<<! cd $ES_HOME ./bin/elasticsearch -d -p pid ! echo \\\"elasticsearch startup\\\" ;; stop) kill -9 `cat $ES_HOME/pid` echo \\\"elasticsearch stopped\\\" ;; restart) kill -9 `cat $ES_HOME/pid` echo \\\"elasticsearch stopped\\\" su es<<! cd $ES_HOME ./bin/elasticsearch -d -p pid ! echo \\\"elasticsearch startup\\\" ;; *) echo \\\"start|stop|restart\\\" ;; esac exit $? \",\"kibana\",\"#!/bin/sh # chkconfig: - 85 15 # description: kibana export ES_HOME=/usr/local/kibana-8.10.1 LOG_FILE=$ES_HOME/kibana.log case \\\"$1\\\" in start) nohup su es -c \\\"cd $ES_HOME && ./bin/kibana -p pid > $LOG_FILE 2>&1 &\\\" echo \\\"Kibana started in the background. Check $LOG_FILE for logs.\\\" ;; stop) kill -9 `cat $ES_HOME/pid` echo \\\"Kibana stopped\\\" ;; restart) kill -9 `cat $ES_HOME/pid` echo \\\"Kibana stopped\\\" nohup su es -c \\\"cd $ES_HOME && ./bin/kibana -p pid > $LOG_FILE 2>&1 &\\\" echo \\\"Kibana restarted in the background. Check $LOG_FILE for logs.\\\" ;; *) echo \\\"Usage: $0 {start|stop|restart}\\\" ;; esac exit $? \",\"logstash\",\"#!/bin/sh # chkconfig: - 85 15 # description: logstash export ES_HOME=/usr/local/logstash-8.10.1 LOG_FILE=$ES_HOME/logstash.log case \\\"$1\\\" in start) su es -c \\\"cd $ES_HOME && ./bin/logstash -f ./config/logstash.conf > $LOG_FILE 2>&1 &\\\" echo \\\"Logstash started in the background.\\\" echo \\\"To view the log, run: tail -f $LOG_FILE\\\" ;; *) echo \\\"Usage: $0 {start|stop|restart}\\\" ;; esac exit $? \"]},\"38\":{\"h\":\"内存配置\",\"t\":[\"elasticsearch\",\"#运行时内存在node.options中 -Xms1g -Xmx1g \",\"logstash 运行时内存配置只能在jvm.options中配\",\"kibana\",\"#运行时内存在node.options中 --max-old-space-size=1024 \"]},\"39\":{\"c\":[\"deploy\",\"docker\",\"日志\"]},\"40\":{\"h\":\"Gitlab 安装部署\",\"t\":[\"安装Gitlab 参考官网及博客链接\",\"官网：Download and install GitLab | GitLab\",\"博客：Ubuntu16.04搭建GitLab服务器教程-腾讯云开发者社区-腾讯云 (tencent.com)\",\"社区版：GitLab-ce\"]},\"41\":{\"h\":\"Gitlab配置\"},\"42\":{\"h\":\"更换gitlab ip地址\",\"t\":[\"#打开gitlab.rb 文件 cd /etc/gitlab vim gitlab.rb #设置访问链接，搜索关键词external_url，修改url为你本地的IP external_url 'http://{你的IP}' \"]},\"43\":{\"h\":\"修改端口\",\"t\":[\"#由于GitLab默认在80端口，可能和本地服务冲突，可以选择其他端口号替代。 #搜索关键词nginx['listen_port']，修改端口为指定端口10001 nginx['listen_port'] = 8099 #修改端口后为了保持统一，需要将访问链接修改成加上端口号的url external_url 'http://{你的IP}:{你的端口号}' \",\"以上配置，需要执行以下命令才能生效。\",\"sudo gitlab-ctl reconfigure sudo gitlab-ctl restart \"]},\"44\":{\"h\":\"常用命令\",\"t\":[\"命令\",\"作用\",\"gitlab-ctl reconfigure\",\"修改gitlab.rb文件之后重新加载配置\",\"gitlab-ctl status\",\"查看 GitLab 状态\",\"gitlab-ctl start\",\"启动 GitLab\",\"gitlab-ctl stop\",\"停止 GitLab\",\"gitlab-ctl restart\",\"重启 GitLab\",\"gitlab-ctl tail\",\"查看所有日志\",\"gitlab-ctl tail nginx/gitlab_acces.log\",\"查看 nginx 访问日志\",\"gitlab-ctl tail postgresql\",\"查看 postgresql 日志\"]},\"45\":{\"h\":\"备份Gitlab\"},\"46\":{\"h\":\"创建备份文件\",\"t\":[\"使用下列命令创建GitLab备份\",\"sudo gitlab-rake gitlab:backup:create \",\"然后便会在 /var/opt/gitlab/backups目录下创建一个类似于15504156082019021711.5.1gitlabbackup.tar的文件. 其中开头部分是创建的日期.\"]},\"47\":{\"h\":\"修改备份目录\",\"t\":[\"首先打开gitlab.rb文件\",\"cd /etc/gitlab vim gitlab.rb \",\"找到下列命令\",\"gitlab_rails['backup_path'] = \\\"/var/opt/gitlab/backups\\\" \",\"然后修改后面的地址即可. 修改完成之后重启配置文件生效.\",\"sudo gitlab-ctl reconfigure \"]},\"48\":{\"h\":\"设置自动备份机制\",\"t\":[\"手动备份过于麻烦, 所以通过crontab设置自动备份. crontab文件之中, 每一行表示一项任务, 每行的每个字段表示一项设置. crontab共6个字段, 其中前5个字段设置执行的时间段, 第6个字段设置命令.\",\"m h dom mon dow user user command \",\"其中\",\"m： 表示分钟，可以是从0到59之间的任何整数。 h：表示小时，可以是从0到23之间的任何整数。 dom：表示日期，可以是从1到31之间的任何整数。 mon：表示月份，可以是从1到12之间的任何整数。 dow：表示星期几，可以是从0到7之间的任何整数，这里的0或7代表星期日。 user : 表示执行的用户。 command：要执行的命令，可以是系统命令，也可以是自己编写的脚本文件(如shell文件)。\",\"现在我们来实现每天23点自动备份GitLab文件, crontab命令如下\",\"sudo vim /etc/crontab 0 23 * * * /opt/gitlab/bin/gitlab-rake gitlab:backup:create CRON=1 \",\"为保证安全, 使用双备份机制. 所以再加一个crontab任务, 设置每天23点1分, 将生成的gitlab文件放到外置硬盘之中, crontab命令如下\",\"1 23 * * * cp -rf /var/opt/gitlab/backups/* /media/cciip/新加卷1/gitlab_backup/ \",\"编辑完/etc/crontab文件之后, 需要重新启动crontab服务, 命令如下\",\"# 重新加载cron配置文件 sudo service cron reload # 重启cron服务 sudo service cron restart \",\"至此, 便能进行自动备份, 而且是双备份机制.\"]},\"49\":{\"h\":\"设置备份过期时间\",\"t\":[\"GitLab每天在备份, 文件会一直增大, 所以最好设置个过期时间, 比如7天.\",\"首先打开/etc/gitlab/gitlab.rb文件\",\"cd /etc/gitlab sudo vim gitlab.rb \",\"找到下列命令\",\"# gitlab_rails['backup_keep_time'] = 604800 \",\"修改为\",\"# 604800 = 60*60*24*7 gitlab_rails['backup_keep_time'] = 604800 \",\"最后重启GitLab配置文件即可.\",\"sudo gitlab-ctl reconfigure \"]},\"50\":{\"h\":\"恢复备份文件\",\"t\":[\"如果想要将GitLab服务器迁移到其他主机上, 首先确保新服务器GitLab版本和老服务器GitLab版本相同.\",\"然后copy备份文件到新服务器上. 比如此时我把192.168.1.25服务器上的备份文件拷贝到192.168.1.24上面, 可以通过如下命令进行.\",\"scp /var/opt/gitlab/backups/1550415608_2019_02_17_11.5.1_gitlab_backup.tar root@192.168.1.24:/var/opt/gitlab/backups \",\"然后在192.168.1.24服务器上进行如下操作 \",\"将备份文件权限改为777\",\"chmod 777 1550415608_2019_02_17_11.5.1_gitlab_backup.tar \",\"执行命令停止相关数据连接服务\",\"gitlab-ctl stop unicorn gitlab-ctl stop sidekiq \",\"执行命令从备份文件中恢复GitLab\",\"gitlab-rake gitlab:backup:restore BACKUP=1550415608_2019_02_17_11.5.1_gitlab_backup.tar \",\"最后启动GitLab服务器即可\",\"sudo gitlab-ctl start \"]},\"51\":{\"c\":[\"deploy\",\"git\"]},\"52\":{\"h\":\"LPG 日志收集部署\"},\"53\":{\"h\":\"下载安装\"},\"54\":{\"h\":\"Loki\",\"t\":[\"官网地址：\",\"Releases · grafana/loki (github.com)\",\"Linux下载：loki-linux-amd64.zip\"]},\"55\":{\"h\":\"Promtail\",\"t\":[\"官网地址：\",\"Releases · grafana/loki (github.com)\",\"Linux下载：promtail-linux-amd64.zip\"]},\"56\":{\"h\":\"Grafana\",\"t\":[\"官网地址：开源版\",\"Download Grafana | Grafana Labs\",\"Linux下载：grafana-10.3.3.linux-amd64.tar.gz\",\"zip：使用 unzip your_file -d path tar.gz：使用 tar -zxvf your_file -C path \"]},\"57\":{\"h\":\"配置启动\"},\"58\":{\"h\":\"Loki配置\",\"t\":[\"auth_enabled: false server: http_listen_port: 3100 grpc_listen_port: 9096 common: instance_addr: 127.0.0.1 path_prefix: /mydata/loki/tmp/loki storage: filesystem: chunks_directory: /mydata/loki/tmp/loki/chunks rules_directory: /mydata/loki/tmp/loki/rules replication_factor: 1 ring: kvstore: store: inmemory schema_config: configs: - from: 2020-10-24 store: boltdb-shipper object_store: filesystem schema: v11 index: prefix: index_ period: 24h storage_config: # 为索引和块配置存储方式 boltdb_shipper: active_index_directory: /mydata/loki/index cache_location: /mydata/loki/index_cache cache_ttl: 24h shared_store: filesystem filesystem: directory: /mydata/loki/chunks limits_config: #设置全局和每租户限制 reject_old_samples: true #是否拒绝旧样本。默认值为 true reject_old_samples_max_age: 1w #拒绝旧样本的最大年龄。默认值为 1w（1周）。 max_streams_per_user: 5000 #每个用户的最大活动流数。默认值为 0（禁用）。 ingestion_rate_mb: 32 ingestion_burst_size_mb: 64 table_manager: retention_deletes_enabled: true #允许删除数据库表中的过期数据。 retention_period: 168h #设置数据保留的时间段，超过此时间的表将被删除。 ingester: chunk_idle_period: 30m #块在没有更新的情况下在内存中停留的持续时间，如果它们没有达到最大块大小，则会被刷新。这意味着即使是半空的块也会在一定时间后被刷新，只要它们不再收到活动，默认为30分钟。 chunk_block_size: 262144 #块的目标未压缩大小，当超过此阈值时，头块将被剪切并在块内压缩，默认为262144字节。 chunk_retain_period: 1m #刷新后内存中保留块的持续时间，默认为0秒。 max_transfer_retries: 0 #在降级到刷新之前尝试传输块的次数。如果设置为0或负值，则禁用传输，默认为0。 lifecycler: #配置ingester的生命周期，以及在哪里注册以进行发现 ring: kvstore: store: inmemory # 用于ring的后端存储，支持consul、etcd、inmemory replication_factor: 1 # 写入和读取的ingester数量，至少为1（为了冗余和弹性，默认情况下为3） compactor: working_directory: /mydata/loki/compactor shared_store: filesystem ruler: alertmanager_url: http://localhost:9093 # By default, Loki will send anonymous, but uniquely-identifiable usage and configuration # analytics to Grafana Labs. These statistics are sent to https://stats.grafana.org/ # # Statistics help us better understand how Loki is used, and they show us performance # levels for most users. This helps us prioritize features and documentation. # For more information on what's sent, look at # https://github.com/grafana/loki/blob/main/pkg/usagestats/stats.go # Refer to the buildReport method to see what goes into a report. # # If you would like to disable reporting, uncomment the following lines: analytics: reporting_enabled: false \"]},\"59\":{\"h\":\"Promtail配置\",\"t\":[\"server: http_listen_port: 9080 grpc_listen_port: 0 positions: filename: /mydata/promtail/tmp/positions.yaml clients: - url: http://localhost:3100/loki/api/v1/push scrape_configs: - job_name: debug #根据需要可定义多个 static_configs: - targets: - localhost labels: job: debug __path__: /kwin/kwin-cloud-bloc/logs/debug/*log #实际的日志文件目录 pipeline_stages: #可有可无 - cri: {} - match: selector: '{job=\\\"debug\\\"}' stages: - regex: # 官方提供的正则表达式，但是有问题：解析为流之后就不能读取到之后的标签，所以pipeline_stages这段代码可用可无 expression: \\\"^(?s)(?P<time>\\\\\\\\S+?) (?P<stream>stdout|stderr) (?P<level>\\\\\\\\S+?) (?P<content>.*)$\\\" - labels: stream: level: content: - timestamp: source: time format: RFC3339Nano - output: source: content - job_name: error static_configs: - targets: - localhost labels: job: error __path__: /kwin/kwin-cloud-bloc/logs/error/*log \"]},\"60\":{\"h\":\"Grafana配置\",\"t\":[\"# 配置位于 grafana-10.1.0/conf/defaults.ini 保持默认就行 [server] # Protocol (http, https, h2, socket) protocol = http # Minimum TLS version allowed. By default, this value is empty. Accepted values are: TLS1.2, TLS1.3. If nothing is set TLS1.2 would be taken min_tls_version = \\\"\\\" # The ip address to bind to, empty will bind to all interfaces http_addr = # The http port to use http_port = 3000 #最后的访问端口地址 # The public facing domain name used to access grafana from a browser domain = localhost # Redirect to correct domain if host header does not match domain # Prevents DNS rebinding attacks enforce_domain = false # The full public facing url root_url = %(protocol)s://%(domain)s:%(http_port)s/ \"]},\"61\":{\"h\":\"启动命令\",\"t\":[\"# Loki # 方式1：后台启动，输出日志到指定目录 nohup ./loki-linux-amd64 -config.file=loki-local-config.yaml > loki.log 2>&1 & # 方式2：后台启动，输出日志到nohup默认文件地址，当前目录下nohup.out文件。 nohup ./loki-linux-amd64 -config.file=loki-local-config.yaml & # promtail nohup ./promtail-linux-amd64 -config.file=promtail-local-config.yaml > promtail.log 2>&1 & nohup ./promtail-linux-amd64 -config.file=promtail-local-config.yaml & # grafana ./grafana-server \"]},\"62\":{\"h\":\"启动脚本\"},\"63\":{\"h\":\"\",\"t\":[\"#!/bin/bash LOKI_PATH=\\\"/usr/local/lpg/loki\\\" stop_loki() { echo \\\"Stopping loki\\\" ps -ef | grep \\\"$LOKI_PATH/loki-linux-amd64\\\" | grep -v grep | awk '{print $2}' | xargs kill -9 } start_loki() { echo \\\"Starting loki\\\" nohup \\\"$LOKI_PATH/loki-linux-amd64\\\" --config.file=\\\"$LOKI_PATH/loki-local-config.yaml\\\" & } restart_loki() { stop_loki sleep 1 start_loki } case \\\"$1\\\" in start) start_loki ;; stop) stop_loki ;; restart) restart_loki ;; *) echo \\\"Usage: $0 {start|stop|restart}\\\" exit 1 ;; esac \"]},\"64\":{\"h\":\"promtail.sh\",\"t\":[\"#!/bin/bash PROMTAIL_PATH=\\\"/usr/local/lpg/promtail\\\" CONFIG_FILE=\\\"$PROMTAIL_PATH/promtail-local-config.yaml\\\" PROMTAIL_BINARY=\\\"$PROMTAIL_PATH/promtail-linux-amd64\\\" start_promtail() { echo \\\"Starting promtail\\\" nohup \\\"$PROMTAIL_BINARY\\\" -config.file=\\\"$CONFIG_FILE\\\" & } stop_promtail() { echo \\\"Stopping promtail\\\" ps -ef | grep \\\"$PROMTAIL_BINARY\\\" | grep -v grep | awk '{print $2}' | xargs kill -9 } restart_promtail() { stop_promtail sleep 1 start_promtail } case \\\"$1\\\" in start) start_promtail ;; stop) stop_promtail ;; restart) restart_promtail ;; *) echo \\\"Usage: $0 {start|stop|restart}\\\" exit 1 ;; esac \"]},\"65\":{\"h\":\"访问，数据源配置\",\"t\":[\"通过 http://ip:3000 访问 （grafana 的defaults.ini 文件配置）\",\"默认账户是admin/admin\",\"进入页面配置数据源，datesource选择 loki\"]},\"66\":{\"c\":[\"deploy\",\"日志\"]},\"67\":{\"h\":\"\",\"t\":[\"404 Not Found\"]}},\"dirtCount\":0,\"index\":[[\"位于\",{\"1\":{\"60\":1}}],[\"^\",{\"1\":{\"59\":1}}],[\"无\",{\"1\":{\"59\":1}}],[\"无法\",{\"1\":{\"10\":1}}],[\"代码\",{\"1\":{\"59\":1}}],[\"代表\",{\"1\":{\"48\":1}}],[\"解析\",{\"1\":{\"59\":1}}],[\"解压\",{\"1\":{\"34\":2,\"35\":1,\"36\":1}}],[\"问题\",{\"1\":{\"59\":1}}],[\"有\",{\"1\":{\"59\":1}}],[\"但是\",{\"1\":{\"59\":1}}],[\"正则表达式\",{\"1\":{\"59\":1}}],[\"正在\",{\"1\":{\"31\":1}}],[\"提供\",{\"1\":{\"59\":1}}],[\"官方\",{\"1\":{\"59\":1}}],[\"官网\",{\"1\":{\"17\":1,\"23\":1,\"24\":1,\"27\":1,\"40\":2,\"54\":1,\"55\":1,\"56\":1}}],[\"实际\",{\"1\":{\"59\":1}}],[\"实现\",{\"1\":{\"7\":1,\"48\":1}}],[\"多个\",{\"1\":{\"59\":1}}],[\"根据\",{\"1\":{\"59\":1}}],[\"弹性\",{\"1\":{\"58\":1}}],[\"冗余\",{\"1\":{\"58\":1}}],[\"数量\",{\"1\":{\"58\":1}}],[\"数据源\",{\"0\":{\"65\":1},\"1\":{\"65\":1}}],[\"数据库\",{\"1\":{\"58\":1}}],[\"数据\",{\"1\":{\"50\":1,\"58\":1}}],[\"数据文件\",{\"1\":{\"10\":1}}],[\"读取\",{\"1\":{\"58\":1,\"59\":1}}],[\"写入\",{\"1\":{\"58\":1}}],[\"支持\",{\"1\":{\"58\":1}}],[\"端\",{\"1\":{\"58\":1}}],[\"端口地址\",{\"1\":{\"60\":1}}],[\"端口号\",{\"1\":{\"43\":3}}],[\"端口\",{\"0\":{\"43\":1},\"1\":{\"28\":4,\"43\":4}}],[\"哪里\",{\"1\":{\"58\":1}}],[\"哪些\",{\"1\":{\"31\":1}}],[\"负值\",{\"1\":{\"58\":1}}],[\"次数\",{\"1\":{\"58\":1}}],[\"传输\",{\"1\":{\"58\":2}}],[\"传到\",{\"1\":{\"9\":1}}],[\"尝试\",{\"1\":{\"58\":1}}],[\"降级\",{\"1\":{\"58\":1}}],[\"秒\",{\"1\":{\"58\":1}}],[\"内\",{\"1\":{\"58\":1}}],[\"内存\",{\"0\":{\"38\":1},\"1\":{\"38\":1,\"58\":2}}],[\"内存大小\",{\"1\":{\"10\":1}}],[\"剪切\",{\"1\":{\"58\":1}}],[\"头块\",{\"1\":{\"58\":1}}],[\"阈值\",{\"1\":{\"58\":1}}],[\"当前目录\",{\"1\":{\"61\":1}}],[\"当\",{\"1\":{\"58\":1}}],[\"压缩\",{\"1\":{\"58\":2}}],[\"未\",{\"1\":{\"58\":1}}],[\"目标\",{\"1\":{\"58\":1}}],[\"目录名\",{\"1\":{\"34\":1}}],[\"目录\",{\"0\":{\"47\":1},\"1\":{\"9\":1,\"10\":2,\"34\":4,\"35\":1,\"36\":2,\"37\":1,\"46\":1,\"61\":1}}],[\"收到\",{\"1\":{\"58\":1}}],[\"收集\",{\"0\":{\"52\":1}}],[\"半空\",{\"1\":{\"58\":1}}],[\"即使\",{\"1\":{\"58\":1}}],[\"即可\",{\"1\":{\"15\":1,\"47\":1,\"49\":1,\"50\":1}}],[\"意味着\",{\"1\":{\"58\":1}}],[\"刷新\",{\"1\":{\"58\":4}}],[\"则\",{\"1\":{\"58\":2}}],[\"大小\",{\"1\":{\"58\":2}}],[\"达到\",{\"1\":{\"58\":1}}],[\"它们\",{\"1\":{\"58\":2}}],[\"持续时间\",{\"1\":{\"58\":2}}],[\"停留\",{\"1\":{\"58\":1}}],[\"停止\",{\"1\":{\"44\":1,\"50\":1}}],[\"情况\",{\"1\":{\"58\":2}}],[\"更新\",{\"1\":{\"58\":1}}],[\"更换\",{\"0\":{\"42\":1}}],[\"被\",{\"1\":{\"58\":4}}],[\"表\",{\"1\":{\"58\":1}}],[\"表中\",{\"1\":{\"58\":1}}],[\"表示\",{\"1\":{\"48\":8}}],[\"允许\",{\"1\":{\"58\":1}}],[\"禁用\",{\"1\":{\"58\":2}}],[\"流数\",{\"1\":{\"58\":1}}],[\"流程\",{\"1\":{\"12\":1}}],[\"活动\",{\"1\":{\"58\":2}}],[\"周\",{\"1\":{\"58\":1}}],[\"周期\",{\"0\":{\"12\":1},\"1\":{\"12\":2}}],[\"年龄\",{\"1\":{\"58\":1}}],[\"样本\",{\"1\":{\"58\":2}}],[\"旧\",{\"1\":{\"58\":2}}],[\"拒绝\",{\"1\":{\"58\":2}}],[\"限制\",{\"1\":{\"58\":1}}],[\"租户\",{\"1\":{\"58\":1}}],[\"全局\",{\"1\":{\"58\":1}}],[\"方式\",{\"1\":{\"58\":1,\"61\":2}}],[\"存储\",{\"1\":{\"58\":2}}],[\"存在\",{\"1\":{\"38\":2}}],[\"块\",{\"1\":{\"58\":8}}],[\"·\",{\"1\":{\"54\":1,\"55\":1}}],[\"连接\",{\"1\":{\"50\":1}}],[\"相关\",{\"1\":{\"50\":1}}],[\"相同\",{\"1\":{\"50\":1}}],[\"改为\",{\"1\":{\"50\":1}}],[\"操作\",{\"1\":{\"50\":1}}],[\"拷贝到\",{\"1\":{\"50\":1}}],[\"把\",{\"1\":{\"50\":1}}],[\"我\",{\"1\":{\"50\":1}}],[\"我们\",{\"1\":{\"48\":1}}],[\"此\",{\"1\":{\"58\":2}}],[\"此时\",{\"1\":{\"50\":1}}],[\"此处\",{\"1\":{\"0\":1}}],[\"老\",{\"1\":{\"50\":1}}],[\"确保\",{\"1\":{\"50\":1}}],[\"迁移\",{\"1\":{\"50\":1}}],[\"想要\",{\"1\":{\"50\":1}}],[\"恢复\",{\"0\":{\"50\":1},\"1\":{\"50\":1}}],[\"最大\",{\"1\":{\"58\":3}}],[\"最后\",{\"1\":{\"49\":1,\"50\":1,\"60\":1}}],[\"最好\",{\"1\":{\"49\":1}}],[\"比如\",{\"1\":{\"49\":1,\"50\":1}}],[\"增大\",{\"1\":{\"49\":1}}],[\"过期数据\",{\"1\":{\"58\":1}}],[\"过期\",{\"0\":{\"49\":1},\"1\":{\"49\":1}}],[\"过于\",{\"1\":{\"48\":1}}],[\"进行\",{\"1\":{\"48\":1,\"50\":1,\"58\":1}}],[\"进入\",{\"1\":{\"34\":1,\"65\":1}}],[\"便\",{\"1\":{\"48\":1}}],[\"便会\",{\"1\":{\"46\":1}}],[\"编辑\",{\"1\":{\"48\":1}}],[\"编写\",{\"1\":{\"48\":1}}],[\"外置硬盘\",{\"1\":{\"48\":1}}],[\"放到\",{\"1\":{\"48\":1}}],[\"放置\",{\"1\":{\"0\":1}}],[\"分\",{\"1\":{\"48\":1}}],[\"分钟\",{\"1\":{\"48\":1,\"58\":1}}],[\"双\",{\"1\":{\"48\":2}}],[\"点\",{\"1\":{\"48\":2}}],[\"来\",{\"1\":{\"48\":1}}],[\"现在\",{\"1\":{\"48\":1}}],[\"也\",{\"1\":{\"48\":1,\"58\":1}}],[\"系统命令\",{\"1\":{\"48\":1}}],[\"要\",{\"1\":{\"48\":1}}],[\"要求\",{\"1\":{\"12\":1}}],[\"或\",{\"1\":{\"48\":1,\"58\":1}}],[\"几\",{\"1\":{\"48\":1}}],[\"几行\",{\"1\":{\"34\":1,\"35\":1}}],[\"星期日\",{\"1\":{\"48\":1}}],[\"星期\",{\"1\":{\"48\":1}}],[\"月份\",{\"1\":{\"48\":1}}],[\"整数\",{\"1\":{\"48\":5}}],[\"整合\",{\"0\":{\"3\":1}}],[\"任何\",{\"1\":{\"48\":5}}],[\"任务\",{\"1\":{\"48\":2}}],[\"第\",{\"1\":{\"48\":1}}],[\"第一次\",{\"1\":{\"10\":1}}],[\"前\",{\"1\":{\"48\":1}}],[\"段\",{\"1\":{\"48\":3}}],[\"字节\",{\"1\":{\"58\":1}}],[\"字\",{\"1\":{\"48\":3}}],[\"字段\",{\"1\":{\"48\":1}}],[\"64\",{\"1\":{\"58\":1}}],[\"60\",{\"1\":{\"49\":2}}],[\"604800\",{\"1\":{\"49\":3}}],[\"6\",{\"1\":{\"48\":2}}],[\"6.2.3\",{\"1\":{\"37\":1}}],[\"共\",{\"1\":{\"48\":1}}],[\"一定\",{\"1\":{\"58\":1}}],[\"一直\",{\"1\":{\"49\":1}}],[\"一项\",{\"1\":{\"48\":2}}],[\"一行\",{\"1\":{\"48\":1}}],[\"一个\",{\"1\":{\"26\":1,\"34\":1,\"46\":1,\"48\":1}}],[\"所以\",{\"1\":{\"48\":2,\"49\":1,\"59\":1}}],[\"所有\",{\"1\":{\"44\":1}}],[\"麻烦\",{\"1\":{\"48\":1}}],[\"手动\",{\"1\":{\"48\":1}}],[\"机制\",{\"0\":{\"48\":1},\"1\":{\"48\":2}}],[\"自己\",{\"1\":{\"48\":1}}],[\"自动\",{\"0\":{\"48\":1},\"1\":{\"48\":3}}],[\"自定义\",{\"1\":{\"7\":4}}],[\"找到\",{\"1\":{\"47\":1,\"49\":1}}],[\"日期\",{\"1\":{\"46\":1,\"48\":1}}],[\"日志\",{\"0\":{\"52\":1},\"1\":{\"7\":22,\"12\":1,\"44\":3,\"59\":1,\"61\":2},\"2\":{\"16\":1,\"39\":1,\"66\":1}}],[\"部分\",{\"1\":{\"46\":1}}],[\"部署\",{\"0\":{\"1\":1,\"8\":1,\"17\":1,\"30\":1,\"33\":1,\"40\":1,\"52\":1}}],[\"于\",{\"1\":{\"46\":1}}],[\"类似\",{\"1\":{\"46\":1}}],[\"然后\",{\"1\":{\"46\":1,\"47\":1,\"50\":2}}],[\"下为\",{\"1\":{\"58\":1}}],[\"下\",{\"1\":{\"46\":1,\"58\":1,\"61\":1}}],[\"下列\",{\"1\":{\"46\":1,\"47\":1,\"49\":1}}],[\"下载安装\",{\"0\":{\"53\":1}}],[\"下载\",{\"1\":{\"26\":1,\"54\":1,\"55\":1,\"56\":1}}],[\"备份文件\",{\"0\":{\"46\":1,\"50\":1},\"1\":{\"50\":4}}],[\"备份\",{\"0\":{\"45\":1,\"47\":1,\"48\":1,\"49\":1},\"1\":{\"46\":1,\"48\":6,\"49\":1}}],[\"作用\",{\"1\":{\"44\":1}}],[\"成\",{\"1\":{\"43\":1}}],[\"统一\",{\"1\":{\"43\":1}}],[\"指定\",{\"1\":{\"43\":1,\"61\":1}}],[\"替代\",{\"1\":{\"43\":1}}],[\"选择\",{\"1\":{\"43\":1,\"65\":1}}],[\"冲突\",{\"1\":{\"43\":1}}],[\"由于\",{\"1\":{\"43\":1}}],[\"本地\",{\"1\":{\"42\":1,\"43\":1}}],[\"本机\",{\"1\":{\"35\":1}}],[\"关键词\",{\"1\":{\"42\":1,\"43\":1}}],[\"关联\",{\"1\":{\"34\":1}}],[\"搜索\",{\"1\":{\"42\":1,\"43\":1}}],[\"打开\",{\"1\":{\"42\":1,\"47\":1,\"49\":1}}],[\"打上\",{\"1\":{\"26\":1}}],[\"版\",{\"1\":{\"40\":1,\"56\":1}}],[\"版本\",{\"1\":{\"26\":1,\"34\":1,\"50\":2}}],[\"社区\",{\"1\":{\"40\":2}}],[\"云\",{\"1\":{\"40\":2}}],[\"腾讯\",{\"1\":{\"40\":2}}],[\"教程\",{\"1\":{\"40\":1}}],[\"链接\",{\"1\":{\"40\":1,\"42\":1,\"43\":1}}],[\"博客\",{\"1\":{\"40\":2}}],[\"`\",{\"1\":{\"37\":8}}],[\"9080\",{\"1\":{\"59\":1}}],[\"9093\",{\"1\":{\"58\":1}}],[\"9096\",{\"1\":{\"58\":1}}],[\"9\",{\"1\":{\"37\":4,\"63\":1,\"64\":1}}],[\"9201\",{\"1\":{\"10\":1}}],[\"9200\",{\"1\":{\"9\":1,\"10\":2,\"34\":1,\"35\":2,\"36\":1}}],[\";\",{\"1\":{\"37\":20,\"63\":8,\"64\":8}}],[\"&\",{\"1\":{\"35\":1,\"36\":1,\"37\":12,\"61\":6,\"63\":1,\"64\":1}}],[\"启用\",{\"1\":{\"35\":1}}],[\"启动\",{\"0\":{\"19\":1,\"37\":1,\"57\":1,\"61\":1,\"62\":1},\"1\":{\"10\":6,\"34\":3,\"35\":2,\"36\":1,\"44\":1,\"50\":1,\"61\":2}}],[\"授权\",{\"1\":{\"35\":1}}],[\"zxvf\",{\"1\":{\"56\":1}}],[\"zip\",{\"1\":{\"54\":1,\"55\":1,\"56\":1}}],[\"zh\",{\"1\":{\"35\":1}}],[\"zone\",{\"1\":{\"19\":2}}],[\"切换\",{\"1\":{\"34\":1,\"35\":1}}],[\"、\",{\"1\":{\"34\":1,\"58\":2}}],[\"至少\",{\"1\":{\"58\":1}}],[\"至此\",{\"1\":{\"48\":1}}],[\"至\",{\"1\":{\"34\":2,\"35\":1,\"36\":1}}],[\"账户\",{\"1\":{\"34\":1,\"65\":1}}],[\"证书\",{\"1\":{\"34\":1}}],[\"而且\",{\"1\":{\"48\":1}}],[\"而\",{\"1\":{\"34\":1}}],[\"建立\",{\"1\":{\"34\":1}}],[\"与\",{\"1\":{\"34\":1}}],[\"赋予\",{\"1\":{\"34\":2}}],[\"组件\",{\"1\":{\"34\":2}}],[\"事先\",{\"1\":{\"34\":1}}],[\"检查\",{\"1\":{\"34\":1}}],[\"时间\",{\"0\":{\"49\":1},\"1\":{\"49\":1,\"58\":2}}],[\"时间段\",{\"1\":{\"48\":1,\"58\":1}}],[\"时内\",{\"1\":{\"38\":2}}],[\"时\",{\"1\":{\"34\":1,\"38\":1,\"58\":1}}],[\"密码\",{\"1\":{\"34\":2,\"36\":1}}],[\"从\",{\"1\":{\"31\":1,\"50\":1}}],[\"您\",{\"1\":{\"31\":1}}],[\"离开\",{\"1\":{\"31\":1}}],[\"是否\",{\"1\":{\"58\":1}}],[\"是从\",{\"1\":{\"48\":5}}],[\"是\",{\"1\":{\"31\":1,\"46\":1,\"48\":3,\"58\":1,\"65\":1}}],[\"是因为\",{\"1\":{\"10\":1}}],[\"如\",{\"1\":{\"48\":1}}],[\"如果\",{\"1\":{\"31\":1,\"50\":1,\"58\":2}}],[\"如下\",{\"1\":{\"24\":1,\"48\":3,\"50\":2}}],[\"移除\",{\"1\":{\"31\":2}}],[\"详细信息\",{\"1\":{\"31\":1}}],[\"列表\",{\"1\":{\"31\":2}}],[\"运行\",{\"1\":{\"31\":2,\"38\":3}}],[\"常用命令\",{\"0\":{\"31\":1,\"44\":1}}],[\"xargs\",{\"1\":{\"63\":1,\"64\":1}}],[\"xblpc7gpoztrwmg7k05d77b52\",{\"1\":{\"29\":1}}],[\"xmx1g\",{\"1\":{\"38\":1}}],[\"xmx512m\",{\"1\":{\"10\":1}}],[\"xms1g\",{\"1\":{\"38\":1}}],[\"xms512m\",{\"1\":{\"10\":1}}],[\"xml\",{\"0\":{\"7\":1},\"1\":{\"7\":3}}],[\"~\",{\"1\":{\"29\":1,\"30\":5}}],[\"状态\",{\"1\":{\"29\":1,\"44\":1}}],[\"查看\",{\"1\":{\"29\":1,\"31\":3,\"44\":4}}],[\"添加\",{\"1\":{\"29\":1,\"34\":1,\"35\":1}}],[\"执行命令\",{\"1\":{\"50\":2}}],[\"执行\",{\"1\":{\"29\":2,\"43\":1,\"48\":3}}],[\"其中\",{\"1\":{\"46\":1,\"48\":2}}],[\"其\",{\"1\":{\"28\":1}}],[\"其他\",{\"1\":{\"21\":1,\"24\":1,\"43\":1,\"50\":1}}],[\"加卷\",{\"1\":{\"48\":1}}],[\"加上\",{\"1\":{\"43\":1}}],[\"加载\",{\"1\":{\"28\":1,\"44\":1,\"48\":1}}],[\"加速\",{\"1\":{\"23\":1}}],[\"三个\",{\"1\":{\"28\":1,\"34\":1}}],[\"每天\",{\"1\":{\"48\":2,\"49\":1}}],[\"每行\",{\"1\":{\"48\":1}}],[\"每\",{\"1\":{\"48\":1,\"58\":1}}],[\"每个\",{\"1\":{\"28\":1,\"48\":1,\"58\":1}}],[\"每台\",{\"1\":{\"24\":1}}],[\"准备\",{\"0\":{\"28\":1}}],[\"入门\",{\"1\":{\"27\":1}}],[\"群后\",{\"1\":{\"31\":1}}],[\"群中\",{\"1\":{\"29\":1}}],[\"群\",{\"1\":{\"27\":1}}],[\"完\",{\"1\":{\"48\":1}}],[\"完成\",{\"1\":{\"47\":1}}],[\"完后\",{\"1\":{\"26\":1}}],[\"完结\",{\"0\":{\"11\":1}}],[\"告一段落\",{\"1\":{\"26\":1}}],[\"去\",{\"1\":{\"26\":1}}],[\"推送\",{\"1\":{\"26\":1}}],[\"并\",{\"1\":{\"26\":1,\"35\":1,\"58\":1}}],[\"标签\",{\"1\":{\"26\":1,\"59\":1}}],[\"私有\",{\"1\":{\"26\":3}}],[\"给\",{\"1\":{\"26\":1}}],[\"首先\",{\"1\":{\"26\":1,\"47\":1,\"49\":1,\"50\":1}}],[\"及\",{\"1\":{\"25\":1,\"40\":1}}],[\"了\",{\"1\":{\"24\":1,\"34\":1}}],[\"能\",{\"1\":{\"48\":1}}],[\"能拉取\",{\"1\":{\"24\":1}}],[\"能否\",{\"1\":{\"21\":1}}],[\"客户端\",{\"1\":{\"24\":1}}],[\"这段\",{\"1\":{\"59\":1}}],[\"这\",{\"1\":{\"28\":1,\"58\":1}}],[\"这里\",{\"1\":{\"26\":1,\"48\":1}}],[\"这样\",{\"1\":{\"24\":1}}],[\"这个\",{\"1\":{\"10\":2}}],[\"都\",{\"1\":{\"24\":1,\"28\":1,\"34\":1}}],[\"远程\",{\"1\":{\"24\":1,\"26\":1}}],[\"程序\",{\"1\":{\"24\":1}}],[\"守护\",{\"1\":{\"24\":1}}],[\")\",{\"1\":{\"24\":1,\"27\":1,\"29\":1,\"36\":4,\"37\":10,\"40\":1,\"48\":1,\"54\":1,\"55\":1,\"59\":5,\"60\":4,\"63\":7,\"64\":7}}],[\"(\",{\"1\":{\"24\":1,\"27\":1,\"29\":1,\"36\":4,\"40\":1,\"48\":1,\"54\":1,\"55\":1,\"59\":5,\"60\":4,\"63\":3,\"64\":3}}],[\"文档\",{\"1\":{\"24\":2,\"27\":1,\"34\":1}}],[\"文件目录\",{\"1\":{\"59\":1}}],[\"文件大小\",{\"1\":{\"7\":2}}],[\"文件\",{\"1\":{\"7\":11,\"9\":1,\"10\":1,\"35\":1,\"42\":1,\"44\":1,\"46\":1,\"47\":1,\"48\":6,\"49\":2,\"61\":2,\"65\":1}}],[\"码头工人\",{\"1\":{\"24\":2,\"27\":1}}],[\"安全性\",{\"1\":{\"35\":1}}],[\"安全\",{\"1\":{\"24\":1,\"36\":1,\"48\":1}}],[\"安装\",{\"0\":{\"33\":1,\"40\":1},\"1\":{\"10\":2,\"34\":1,\"40\":1}}],[\"不能\",{\"1\":{\"59\":1}}],[\"不再\",{\"1\":{\"58\":1}}],[\"不\",{\"1\":{\"24\":1}}],[\"测试\",{\"0\":{\"26\":1},\"1\":{\"24\":1,\"26\":1}}],[\"注册\",{\"1\":{\"35\":1,\"58\":1}}],[\"注册表\",{\"1\":{\"24\":2}}],[\"注意事项\",{\"1\":{\"34\":1}}],[\"注意\",{\"1\":{\"10\":1}}],[\"参考\",{\"1\":{\"23\":1,\"24\":1,\"34\":1,\"35\":1,\"40\":1}}],[\"404\",{\"1\":{\"67\":1}}],[\"49\",{\"1\":{\"29\":2}}],[\"4789\",{\"1\":{\"28\":2}}],[\"4410\",{\"1\":{\"21\":1}}],[\"4573\",{\"1\":{\"7\":1,\"9\":1,\"10\":2,\"36\":1}}],[\"4572\",{\"1\":{\"7\":1,\"9\":1,\"10\":2,\"36\":1}}],[\"4571\",{\"1\":{\"7\":1,\"9\":1,\"10\":2,\"36\":1}}],[\"4570\",{\"1\":{\"7\":1,\"9\":1,\"10\":2,\"36\":1}}],[\"goes\",{\"1\":{\"58\":1}}],[\"go\",{\"1\":{\"58\":1}}],[\"gz\",{\"1\":{\"56\":2}}],[\"grep\",{\"1\":{\"63\":3,\"64\":3}}],[\"grpc\",{\"1\":{\"58\":1,\"59\":1}}],[\"grafana\",{\"0\":{\"56\":1,\"60\":1},\"1\":{\"54\":1,\"55\":1,\"56\":3,\"58\":3,\"60\":2,\"61\":2,\"65\":1}}],[\"group\",{\"1\":{\"18\":2}}],[\"groupid\",{\"1\":{\"5\":4}}],[\"github\",{\"1\":{\"54\":1,\"55\":1,\"58\":1}}],[\"git\",{\"2\":{\"51\":1}}],[\"gitlabbackup\",{\"1\":{\"46\":1}}],[\"gitlab\",{\"0\":{\"40\":1,\"41\":1,\"42\":1,\"45\":1},\"1\":{\"40\":5,\"42\":3,\"43\":3,\"44\":14,\"46\":4,\"47\":6,\"48\":7,\"49\":9,\"50\":15}}],[\"get\",{\"1\":{\"36\":2}}],[\"gen\",{\"1\":{\"21\":1}}],[\"guide\",{\"1\":{\"34\":2}}],[\"gateway\",{\"1\":{\"21\":1}}],[\"网卡\",{\"1\":{\"21\":1}}],[\"网络\",{\"1\":{\"21\":1}}],[\"重点\",{\"1\":{\"34\":1}}],[\"重启\",{\"1\":{\"21\":1,\"44\":1,\"47\":1,\"48\":1,\"49\":1}}],[\"重新启动\",{\"1\":{\"10\":1,\"24\":1,\"48\":1}}],[\"重新\",{\"1\":{\"7\":2,\"28\":1,\"44\":1,\"48\":1}}],[\"静态\",{\"1\":{\"21\":1}}],[\"新\",{\"1\":{\"21\":1,\"34\":1,\"48\":1,\"50\":2}}],[\"镜像\",{\"1\":{\"21\":1,\"23\":1,\"24\":1,\"26\":4}}],[\"拉取\",{\"1\":{\"21\":1,\"26\":1}}],[\"验证\",{\"1\":{\"21\":1}}],[\"对应\",{\"1\":{\"21\":1,\"25\":1,\"34\":2}}],[\"克隆\",{\"0\":{\"25\":1},\"1\":{\"21\":1,\"25\":1}}],[\"思路\",{\"1\":{\"21\":1}}],[\"would\",{\"1\":{\"58\":1,\"60\":1}}],[\"working\",{\"1\":{\"58\":1}}],[\"worker2\",{\"1\":{\"21\":1,\"29\":1}}],[\"worker\",{\"1\":{\"21\":2,\"29\":1}}],[\"worker1\",{\"1\":{\"21\":1,\"29\":1}}],[\"what\",{\"1\":{\"58\":2}}],[\"will\",{\"1\":{\"58\":1,\"60\":1}}],[\"with\",{\"1\":{\"17\":1,\"34\":1}}],[\"w\",{\"1\":{\"58\":2}}],[\"主机\",{\"1\":{\"36\":1,\"50\":1}}],[\"主机名\",{\"1\":{\"21\":3,\"25\":1}}],[\"主\",{\"1\":{\"21\":1,\"29\":1,\"31\":2}}],[\"仓库\",{\"1\":{\"21\":1,\"26\":3}}],[\"桥接\",{\"1\":{\"21\":1}}],[\"均\",{\"1\":{\"21\":1}}],[\"虚拟机\",{\"0\":{\"25\":1},\"1\":{\"21\":1,\"24\":1}}],[\"四台\",{\"1\":{\"21\":1}}],[\"➕\",{\"0\":{\"21\":1}}],[\"防火墙\",{\"1\":{\"19\":1,\"28\":1}}],[\"开源\",{\"1\":{\"56\":1}}],[\"开发者\",{\"1\":{\"40\":1}}],[\"开放\",{\"1\":{\"28\":4}}],[\"开启\",{\"1\":{\"19\":1,\"34\":1}}],[\"开头\",{\"1\":{\"12\":1,\"46\":1}}],[\"\\\\\",{\"1\":{\"18\":18,\"29\":4,\"59\":4}}],[\"|\",{\"1\":{\"17\":1,\"23\":1,\"24\":2,\"27\":1,\"34\":4,\"37\":6,\"40\":1,\"56\":1,\"59\":1,\"63\":6,\"64\":6}}],[\"之前\",{\"1\":{\"58\":1}}],[\"之间\",{\"1\":{\"48\":5}}],[\"之中\",{\"1\":{\"48\":2}}],[\"之\",{\"0\":{\"17\":1}}],[\"之后\",{\"1\":{\"10\":2,\"26\":1,\"34\":1,\"44\":1,\"47\":1,\"48\":1,\"59\":2}}],[\"监控\",{\"0\":{\"17\":1}}],[\"规则\",{\"1\":{\"15\":1,\"28\":1,\"36\":1}}],[\"匹配\",{\"1\":{\"15\":1,\"36\":1}}],[\"符合\",{\"1\":{\"15\":1}}],[\"*\",{\"1\":{\"14\":1,\"15\":1,\"29\":1,\"34\":1,\"37\":3,\"48\":7,\"49\":3,\"59\":3,\"63\":1,\"64\":1}}],[\"02\",{\"1\":{\"50\":3}}],[\"04\",{\"1\":{\"40\":1}}],[\"0\",{\"1\":{\"13\":1,\"26\":4,\"30\":4,\"37\":2,\"48\":5,\"58\":5,\"59\":1,\"63\":1,\"64\":1}}],[\"0.0.0.0\",{\"1\":{\"9\":4,\"34\":1,\"35\":1,\"36\":4}}],[\"脚本\",{\"0\":{\"37\":1,\"62\":1},\"1\":{\"13\":1,\"14\":1,\"37\":1,\"48\":1}}],[\"删除\",{\"1\":{\"12\":1,\"31\":1,\"58\":2}}],[\"后面\",{\"1\":{\"47\":1}}],[\"后台\",{\"1\":{\"34\":1,\"35\":1,\"61\":2}}],[\"后续\",{\"1\":{\"26\":1}}],[\"后\",{\"1\":{\"12\":1,\"24\":1,\"43\":1,\"58\":3}}],[\"小时\",{\"1\":{\"12\":1,\"48\":1}}],[\"个\",{\"1\":{\"12\":1,\"48\":3,\"49\":1}}],[\"个人\",{\"1\":{\"0\":1}}],[\"：\",{\"1\":{\"12\":1,\"17\":1,\"21\":1,\"23\":1,\"24\":1,\"27\":1,\"31\":1,\"34\":4,\"37\":1,\"40\":3,\"48\":6,\"54\":2,\"55\":2,\"56\":4,\"59\":1,\"61\":2}}],[\"结果\",{\"1\":{\"12\":1}}],[\"模板\",{\"0\":{\"14\":1},\"1\":{\"12\":1,\"15\":1}}],[\"模式\",{\"1\":{\"10\":1,\"27\":1}}],[\"策略\",{\"0\":{\"13\":1},\"1\":{\"12\":1}}],[\"生命周期\",{\"1\":{\"58\":1}}],[\"生效\",{\"1\":{\"12\":1,\"21\":1,\"24\":1,\"28\":1,\"43\":1,\"47\":1}}],[\"生成\",{\"1\":{\"7\":2,\"29\":1,\"48\":1}}],[\"使\",{\"1\":{\"12\":1,\"24\":1,\"28\":1}}],[\"使用\",{\"1\":{\"7\":1,\"10\":1,\"21\":3,\"24\":1,\"34\":2,\"46\":1,\"48\":1,\"56\":2}}],[\"才能\",{\"1\":{\"12\":1,\"43\":1}}],[\"创建\",{\"0\":{\"13\":1,\"14\":1,\"15\":1,\"29\":1,\"46\":1},\"1\":{\"12\":5,\"15\":1,\"33\":1,\"34\":2,\"46\":3}}],[\"按照\",{\"1\":{\"12\":1}}],[\"需\",{\"1\":{\"12\":1}}],[\"需要\",{\"1\":{\"10\":2,\"24\":1,\"34\":1,\"43\":2,\"48\":1,\"59\":1}}],[\"期限\",{\"1\":{\"12\":1}}],[\"通过\",{\"1\":{\"12\":1,\"48\":1,\"50\":1,\"65\":1}}],[\"管理\",{\"0\":{\"12\":1},\"1\":{\"12\":2}}],[\"索引\",{\"0\":{\"12\":1,\"13\":1,\"14\":1,\"15\":1},\"1\":{\"12\":5,\"15\":1,\"36\":1,\"58\":1}}],[\"效果\",{\"0\":{\"11\":1,\"26\":1}}],[\"7\",{\"1\":{\"48\":2,\"49\":2}}],[\"7946\",{\"1\":{\"28\":4}}],[\"777\",{\"1\":{\"10\":1,\"50\":2}}],[\"7.6.2\",{\"1\":{\"10\":3}}],[\"再加\",{\"1\":{\"48\":1}}],[\"再\",{\"1\":{\"10\":1}}],[\"再启动\",{\"1\":{\"10\":2}}],[\"修改\",{\"0\":{\"43\":1,\"47\":1},\"1\":{\"10\":1,\"21\":2,\"24\":1,\"25\":1,\"34\":1,\"35\":1,\"36\":1,\"42\":1,\"43\":3,\"44\":1,\"47\":2,\"49\":1}}],[\"权限\",{\"1\":{\"10\":2,\"34\":2,\"50\":1}}],[\"没有\",{\"1\":{\"10\":1,\"58\":2}}],[\"那\",{\"1\":{\"10\":1}}],[\"发现\",{\"1\":{\"10\":1,\"58\":1}}],[\"会\",{\"1\":{\"10\":1,\"21\":1,\"49\":1,\"58\":2}}],[\"可\",{\"1\":{\"59\":1}}],[\"可用\",{\"1\":{\"59\":1}}],[\"可有可无\",{\"1\":{\"59\":1}}],[\"可定义\",{\"1\":{\"59\":1}}],[\"可能\",{\"1\":{\"10\":1,\"43\":1}}],[\"可以\",{\"1\":{\"10\":2,\"31\":1,\"43\":1,\"48\":7,\"50\":1}}],[\"命令\",{\"0\":{\"61\":1},\"1\":{\"10\":1,\"21\":1,\"24\":1,\"29\":1,\"34\":1,\"35\":1,\"43\":1,\"44\":1,\"46\":1,\"47\":1,\"48\":5,\"49\":1,\"50\":1}}],[\"命名\",{\"1\":{\"7\":2}}],[\"59\",{\"1\":{\"48\":1}}],[\"5\",{\"1\":{\"48\":1}}],[\"5000\",{\"1\":{\"24\":3,\"26\":3,\"30\":4,\"58\":1}}],[\"5601\",{\"1\":{\"10\":1,\"35\":2}}],[\"5602\",{\"1\":{\"10\":1}}],[\"5.3\",{\"1\":{\"5\":1}}],[\"地址\",{\"0\":{\"42\":1},\"1\":{\"10\":1,\"17\":1,\"21\":2,\"23\":1,\"24\":1,\"25\":1,\"27\":1,\"36\":1,\"47\":1,\"54\":1,\"55\":1,\"56\":1,\"61\":1}}],[\"服务器上进行\",{\"1\":{\"50\":1}}],[\"服务器\",{\"1\":{\"40\":1,\"50\":6}}],[\"服务\",{\"0\":{\"30\":1},\"1\":{\"10\":2,\"24\":1,\"31\":4,\"43\":1,\"48\":2,\"50\":1}}],[\"域名\",{\"1\":{\"10\":2}}],[\"用于\",{\"1\":{\"58\":1}}],[\"用户名\",{\"1\":{\"36\":1}}],[\"用户\",{\"1\":{\"33\":1,\"34\":4,\"35\":1,\"36\":1,\"48\":1,\"58\":1}}],[\"用途\",{\"1\":{\"21\":1}}],[\"用\",{\"1\":{\"10\":2,\"26\":1,\"34\":1}}],[\"kvstore\",{\"1\":{\"58\":2}}],[\"keep\",{\"1\":{\"49\":2}}],[\"kill\",{\"1\":{\"37\":4,\"63\":1,\"64\":1}}],[\"kibana\",{\"0\":{\"35\":1},\"1\":{\"10\":4,\"34\":1,\"35\":9,\"37\":10,\"38\":1}}],[\"kwin\",{\"1\":{\"34\":1,\"36\":1,\"59\":4}}],[\"k\",{\"1\":{\"10\":1}}],[\"插件\",{\"1\":{\"10\":2}}],[\"ubuntu16\",{\"1\":{\"40\":1}}],[\"use\",{\"1\":{\"60\":1}}],[\"used\",{\"1\":{\"58\":1,\"60\":1}}],[\"users\",{\"1\":{\"58\":1}}],[\"user\",{\"1\":{\"36\":1,\"48\":3,\"58\":1}}],[\"us\",{\"1\":{\"58\":3}}],[\"usagestats\",{\"1\":{\"58\":1}}],[\"usage\",{\"1\":{\"37\":2,\"58\":1,\"63\":1,\"64\":1}}],[\"usr\",{\"1\":{\"10\":4,\"34\":4,\"35\":3,\"36\":2,\"37\":3,\"63\":1,\"64\":1}}],[\"url\",{\"1\":{\"35\":1,\"42\":3,\"43\":2,\"58\":1,\"59\":1,\"60\":2}}],[\"udp\",{\"1\":{\"28\":4}}],[\"uuid\",{\"1\":{\"21\":1}}],[\"uncomment\",{\"1\":{\"58\":1}}],[\"unconfined\",{\"1\":{\"18\":1}}],[\"understand\",{\"1\":{\"58\":1}}],[\"uniquely\",{\"1\":{\"58\":1}}],[\"unicorn\",{\"1\":{\"50\":1}}],[\"unzip\",{\"1\":{\"56\":1}}],[\"unless\",{\"1\":{\"18\":1}}],[\"up\",{\"1\":{\"10\":1,\"34\":1}}],[\"utf\",{\"1\":{\"7\":7}}],[\"节点\",{\"0\":{\"22\":1},\"1\":{\"10\":1,\"21\":7,\"25\":1,\"26\":2,\"28\":1,\"29\":4,\"31\":7}}],[\"单一\",{\"1\":{\"10\":1}}],[\"以下\",{\"1\":{\"34\":1,\"35\":1,\"43\":1}}],[\"以及\",{\"1\":{\"21\":1,\"26\":1,\"58\":1}}],[\"以\",{\"1\":{\"10\":1,\"12\":1,\"58\":1}}],[\"以上\",{\"1\":{\"7\":1,\"43\":1}}],[\"集群\",{\"0\":{\"21\":1,\"27\":1,\"29\":1},\"1\":{\"10\":1,\"21\":4,\"26\":1,\"28\":1,\"29\":1}}],[\"#\",{\"1\":{\"10\":11,\"19\":2,\"21\":3,\"28\":4,\"29\":4,\"30\":5,\"31\":2,\"35\":4,\"36\":7,\"37\":9,\"38\":2,\"42\":2,\"43\":3,\"48\":2,\"49\":2,\"58\":24,\"59\":4,\"60\":10,\"61\":5,\"63\":1,\"64\":1}}],[\"3.\",{\"1\":{\"60\":1}}],[\"32\",{\"1\":{\"58\":1}}],[\"3100\",{\"1\":{\"58\":1,\"59\":1}}],[\"31\",{\"1\":{\"48\":1}}],[\"3\",{\"1\":{\"10\":1,\"30\":1,\"58\":1}}],[\"3000\",{\"1\":{\"60\":1,\"65\":1}}],[\"30\",{\"1\":{\"7\":4,\"58\":2}}],[\"'\",{\"1\":{\"10\":2,\"24\":2,\"29\":2,\"35\":2,\"36\":4,\"42\":2,\"43\":6,\"47\":2,\"49\":4,\"58\":1,\"59\":2,\"63\":2,\"64\":2}}],[\"+\",{\"1\":{\"9\":1,\"36\":1,\"59\":2}}],[\"@\",{\"1\":{\"9\":1,\"29\":1,\"30\":5,\"36\":1,\"50\":1}}],[\"]\",{\"1\":{\"9\":2,\"14\":1,\"15\":1,\"23\":1,\"24\":1,\"29\":1,\"30\":5,\"34\":3,\"35\":1,\"36\":4,\"43\":2,\"47\":1,\"49\":2,\"60\":1}}],[\"[\",{\"1\":{\"9\":2,\"14\":1,\"15\":1,\"23\":1,\"24\":1,\"29\":1,\"30\":5,\"34\":3,\"35\":1,\"36\":4,\"43\":2,\"47\":1,\"49\":2,\"60\":1}}],[\"job\",{\"1\":{\"59\":5}}],[\"join\",{\"1\":{\"29\":3}}],[\"jvm\",{\"1\":{\"10\":1,\"38\":1}}],[\"json\",{\"1\":{\"9\":5,\"10\":2,\"23\":1,\"24\":1,\"35\":1,\"36\":7}}],[\"java\",{\"1\":{\"7\":1,\"10\":1}}],[\"挂载\",{\"1\":{\"9\":1,\"10\":3}}],[\"中配\",{\"1\":{\"38\":1}}],[\"中\",{\"1\":{\"9\":1,\"21\":1,\"31\":1,\"38\":2,\"50\":1,\"58\":2}}],[\"上面\",{\"1\":{\"29\":1,\"50\":1}}],[\"上\",{\"1\":{\"9\":1,\"50\":3}}],[\"框架\",{\"1\":{\"7\":1}}],[\"控制\",{\"1\":{\"7\":1}}],[\"控制台\",{\"1\":{\"7\":1}}],[\"记录\",{\"1\":{\"7\":1}}],[\"接口\",{\"1\":{\"7\":1}}],[\"业务\",{\"1\":{\"7\":1}}],[\"262144\",{\"1\":{\"58\":2}}],[\"24\",{\"1\":{\"49\":1,\"58\":3}}],[\"24.0.5\",{\"1\":{\"29\":3}}],[\"23\",{\"1\":{\"48\":5}}],[\"2377\",{\"1\":{\"28\":2,\"29\":2}}],[\"2\",{\"1\":{\"37\":3,\"60\":2,\"61\":3,\"63\":1,\"64\":1}}],[\"2.8\",{\"1\":{\"24\":1}}],[\"2.3.0.\",{\"1\":{\"5\":1}}],[\"255.255.255.0\",{\"1\":{\"21\":1}}],[\"2020\",{\"1\":{\"58\":1}}],[\"2019\",{\"1\":{\"50\":3}}],[\"20\",{\"1\":{\"7\":3}}],[\",\",{\"1\":{\"7\":25,\"9\":2,\"10\":7,\"12\":2,\"13\":4,\"14\":5,\"21\":23,\"23\":2,\"24\":10,\"26\":8,\"27\":1,\"28\":1,\"29\":6,\"31\":9,\"33\":1,\"34\":15,\"35\":8,\"36\":10,\"37\":7,\"38\":4,\"40\":3,\"43\":2,\"44\":17,\"46\":2,\"47\":5,\"48\":24,\"49\":11,\"50\":13,\"54\":2,\"55\":2,\"56\":3,\"58\":5,\"60\":6,\"65\":2},\"2\":{\"16\":2,\"20\":1,\"32\":1,\"39\":2,\"51\":1,\"66\":1}}],[\"out\",{\"1\":{\"61\":1}}],[\"output\",{\"1\":{\"9\":1,\"36\":1,\"59\":1}}],[\"object\",{\"1\":{\"58\":1}}],[\"old\",{\"1\":{\"38\":1,\"58\":2}}],[\"origin\",{\"1\":{\"34\":1}}],[\"org\",{\"1\":{\"5\":1,\"7\":5,\"58\":1}}],[\"og5uwjm5d50g5cv1avt525af1\",{\"1\":{\"29\":1}}],[\"options\",{\"1\":{\"38\":3}}],[\"opt\",{\"1\":{\"18\":1,\"46\":1,\"47\":1,\"48\":2,\"50\":2}}],[\"opts\",{\"1\":{\"10\":1}}],[\"os\",{\"1\":{\"18\":2}}],[\"of\",{\"1\":{\"14\":2}}],[\"onboot\",{\"1\":{\"21\":1}}],[\"only\",{\"1\":{\"21\":1}}],[\"on\",{\"1\":{\"10\":2,\"23\":1,\"58\":1}}],[\"onmismatch\",{\"1\":{\"7\":4}}],[\"onmatch\",{\"1\":{\"7\":4}}],[\"只要\",{\"1\":{\"58\":1}}],[\"只能\",{\"1\":{\"38\":1}}],[\"只\",{\"1\":{\"7\":1,\"10\":1}}],[\"header\",{\"1\":{\"60\":1}}],[\"helps\",{\"1\":{\"58\":1}}],[\"help\",{\"1\":{\"58\":1}}],[\"h2\",{\"1\":{\"60\":1}}],[\"hub\",{\"1\":{\"23\":1}}],[\"h\",{\"1\":{\"13\":1,\"48\":2,\"58\":3}}],[\"how\",{\"1\":{\"58\":1}}],[\"home\",{\"1\":{\"37\":14}}],[\"hot\",{\"1\":{\"13\":1}}],[\"hostnamectl\",{\"1\":{\"21\":1}}],[\"hostname\",{\"1\":{\"21\":2,\"29\":1,\"31\":1}}],[\"hosts\",{\"1\":{\"9\":1,\"10\":1,\"35\":1,\"36\":1}}],[\"host\",{\"1\":{\"6\":1,\"7\":7,\"9\":5,\"18\":8,\"34\":1,\"35\":1,\"36\":5,\"60\":1}}],[\"https\",{\"1\":{\"35\":2,\"36\":1,\"58\":2,\"60\":1}}],[\"http\",{\"1\":{\"10\":1,\"19\":1,\"23\":1,\"24\":1,\"34\":4,\"35\":1,\"36\":1,\"42\":1,\"43\":1,\"58\":2,\"59\":2,\"60\":6,\"65\":1}}],[\"hibernate\",{\"1\":{\"7\":1}}],[\"history\",{\"1\":{\"7\":2}}],[\"天\",{\"1\":{\"7\":2,\"49\":1}}],[\"天数\",{\"1\":{\"7\":2}}],[\"保证\",{\"1\":{\"48\":1}}],[\"保持\",{\"1\":{\"43\":1,\"60\":1}}],[\"保留\",{\"1\":{\"7\":2,\"12\":1,\"58\":2}}],[\"保存\",{\"1\":{\"7\":1}}],[\"more\",{\"1\":{\"58\":1}}],[\"most\",{\"1\":{\"58\":1}}],[\"mon\",{\"1\":{\"48\":2}}],[\"mode\",{\"1\":{\"9\":4,\"21\":1,\"36\":4}}],[\"mynginx\",{\"1\":{\"30\":1,\"31\":3}}],[\"mydata\",{\"1\":{\"9\":1,\"10\":5,\"18\":3,\"24\":1,\"58\":7,\"59\":1}}],[\"mirror\",{\"1\":{\"23\":1}}],[\"mirrors\",{\"1\":{\"23\":1}}],[\"minimum\",{\"1\":{\"60\":1}}],[\"minimal\",{\"1\":{\"34\":1}}],[\"min\",{\"1\":{\"13\":2,\"60\":1}}],[\"media\",{\"1\":{\"48\":1}}],[\"method\",{\"1\":{\"21\":1,\"58\":1}}],[\"message\",{\"1\":{\"7\":8,\"9\":2,\"36\":2}}],[\"match\",{\"1\":{\"59\":1,\"60\":1}}],[\"main\",{\"1\":{\"58\":1}}],[\"manager\",{\"1\":{\"29\":5,\"58\":1}}],[\"master\",{\"1\":{\"21\":1,\"26\":1,\"29\":2,\"30\":2,\"34\":1}}],[\"maxhistory\",{\"1\":{\"7\":4}}],[\"max\",{\"1\":{\"7\":4,\"38\":1,\"58\":3}}],[\"maxfilesize\",{\"1\":{\"7\":4}}],[\"ms\",{\"1\":{\"13\":1}}],[\"mutate\",{\"1\":{\"9\":1,\"36\":1}}],[\"mxoop\",{\"1\":{\"7\":2}}],[\"mb\",{\"1\":{\"7\":2,\"58\":2}}],[\"m\",{\"1\":{\"7\":2,\"48\":2,\"58\":2}}],[\"mm\",{\"1\":{\"7\":2,\"9\":1,\"36\":1}}],[\"就行\",{\"1\":{\"60\":1}}],[\"就\",{\"1\":{\"7\":2,\"24\":1,\"34\":1,\"59\":1}}],[\"超过\",{\"1\":{\"7\":2,\"58\":2}}],[\"，\",{\"0\":{\"65\":1},\"1\":{\"7\":6,\"10\":3,\"12\":2,\"21\":4,\"24\":1,\"25\":1,\"26\":4,\"31\":1,\"34\":5,\"42\":2,\"43\":5,\"48\":8,\"58\":15,\"59\":2,\"61\":3,\"65\":1}}],[\"yaml\",{\"1\":{\"59\":1,\"61\":4,\"63\":1,\"64\":1}}],[\"you\",{\"1\":{\"58\":1}}],[\"your\",{\"1\":{\"56\":2}}],[\"yes\",{\"1\":{\"21\":5}}],[\"yyyy\",{\"1\":{\"7\":2,\"9\":1,\"36\":1}}],[\"yml\",{\"0\":{\"6\":1,\"10\":1},\"1\":{\"9\":1,\"34\":1,\"35\":1}}],[\"%\",{\"1\":{\"7\":22,\"9\":2,\"36\":2,\"60\":3}}],[\"格式\",{\"1\":{\"7\":8}}],[\"为流\",{\"1\":{\"59\":1}}],[\"为了\",{\"1\":{\"43\":1,\"58\":1}}],[\"为\",{\"1\":{\"7\":2,\"10\":1,\"24\":1,\"26\":1,\"34\":1,\"35\":1,\"42\":1,\"43\":1,\"48\":1,\"49\":1,\"58\":10}}],[\"设置\",{\"0\":{\"48\":1,\"49\":1},\"1\":{\"7\":6,\"10\":3,\"12\":1,\"21\":1,\"26\":1,\"34\":1,\"42\":1,\"48\":5,\"49\":1,\"58\":3}}],[\"级别\",{\"1\":{\"7\":2}}],[\"qos\",{\"1\":{\"7\":8}}],[\"cciip\",{\"1\":{\"48\":1}}],[\"ctl\",{\"1\":{\"43\":2,\"44\":8,\"47\":1,\"49\":1,\"50\":3}}],[\"cd\",{\"1\":{\"37\":5,\"42\":1,\"47\":1,\"49\":1}}],[\"cri\",{\"1\":{\"59\":1}}],[\"cron\",{\"1\":{\"48\":5}}],[\"crontab\",{\"1\":{\"48\":9}}],[\"crt\",{\"1\":{\"36\":1}}],[\"creating\",{\"1\":{\"36\":1}}],[\"create\",{\"1\":{\"30\":1,\"35\":1,\"46\":1,\"48\":1}}],[\"cp\",{\"1\":{\"36\":1,\"48\":1}}],[\"cn\",{\"1\":{\"35\":1}}],[\"current\",{\"1\":{\"29\":1}}],[\"c\",{\"1\":{\"23\":1,\"37\":3,\"56\":1}}],[\"ce\",{\"1\":{\"40\":1}}],[\"certs\",{\"1\":{\"36\":1}}],[\"centos\",{\"1\":{\"23\":1}}],[\"ce7f3dd111\",{\"1\":{\"21\":1}}],[\"cmd\",{\"1\":{\"19\":3,\"28\":5}}],[\"cat\",{\"1\":{\"37\":4}}],[\"case\",{\"1\":{\"37\":3,\"63\":1,\"64\":1}}],[\"cacert\",{\"1\":{\"36\":1}}],[\"cache\",{\"1\":{\"18\":1,\"58\":3}}],[\"ca\",{\"1\":{\"34\":1,\"36\":1}}],[\"cap\",{\"1\":{\"18\":2}}],[\"cloud\",{\"1\":{\"59\":2}}],[\"clients\",{\"1\":{\"59\":1}}],[\"cluster\",{\"1\":{\"10\":1,\"34\":2}}],[\"classic\",{\"1\":{\"7\":4}}],[\"class\",{\"1\":{\"7\":20}}],[\"copy\",{\"1\":{\"50\":1}}],[\"code\",{\"1\":{\"36\":2}}],[\"codec\",{\"1\":{\"9\":4,\"10\":1,\"36\":4}}],[\"correct\",{\"1\":{\"60\":1}}],[\"cors\",{\"1\":{\"34\":2}}],[\"core\",{\"1\":{\"7\":4}}],[\"compactor\",{\"1\":{\"58\":2}}],[\"compose\",{\"0\":{\"8\":1,\"10\":1},\"1\":{\"9\":1,\"10\":1}}],[\"common\",{\"1\":{\"58\":1}}],[\"command\",{\"1\":{\"29\":1,\"48\":2}}],[\"com\",{\"1\":{\"7\":2,\"23\":1,\"24\":1,\"27\":1,\"40\":1,\"54\":1,\"55\":1,\"58\":1}}],[\"consul\",{\"1\":{\"58\":1}}],[\"console\",{\"1\":{\"7\":2}}],[\"configs\",{\"1\":{\"58\":1,\"59\":3}}],[\"config\",{\"1\":{\"34\":1,\"35\":1,\"36\":5,\"37\":1,\"58\":3,\"61\":8,\"63\":2,\"64\":4}}],[\"configuration\",{\"1\":{\"7\":2,\"36\":1,\"58\":1}}],[\"conf\",{\"1\":{\"9\":2,\"10\":2,\"36\":5,\"37\":1,\"60\":1}}],[\"content\",{\"1\":{\"59\":3}}],[\"context\",{\"1\":{\"7\":2}}],[\"container\",{\"1\":{\"10\":3}}],[\"controller\",{\"1\":{\"7\":2}}],[\"chunk\",{\"1\":{\"58\":3}}],[\"chunks\",{\"1\":{\"58\":3}}],[\"check\",{\"1\":{\"37\":2}}],[\"chkconfig\",{\"1\":{\"37\":3}}],[\"chown\",{\"1\":{\"34\":1,\"35\":1}}],[\"chowdn\",{\"1\":{\"34\":1}}],[\"chmod\",{\"1\":{\"10\":1,\"50\":1}}],[\"charset\",{\"1\":{\"7\":8}}],[\"ch\",{\"1\":{\"7\":8}}],[\"到\",{\"1\":{\"7\":6,\"21\":1,\"26\":2,\"29\":1,\"48\":5,\"50\":2,\"58\":1,\"59\":1,\"61\":2}}],[\"访问\",{\"0\":{\"65\":1},\"1\":{\"7\":2,\"10\":4,\"19\":1,\"24\":1,\"26\":1,\"42\":1,\"43\":1,\"44\":1,\"60\":1,\"65\":1}}],[\"}\",{\"1\":{\"7\":34,\"9\":13,\"13\":9,\"14\":2,\"23\":1,\"24\":1,\"34\":1,\"36\":15,\"37\":2,\"42\":1,\"43\":2,\"59\":2,\"63\":5,\"64\":5}}],[\"ttl\",{\"1\":{\"58\":1}}],[\"taken\",{\"1\":{\"60\":1}}],[\"table\",{\"1\":{\"58\":1}}],[\"targets\",{\"1\":{\"59\":2}}],[\"tar\",{\"1\":{\"46\":1,\"50\":3,\"56\":3}}],[\"tail\",{\"1\":{\"37\":1,\"44\":3}}],[\"tag\",{\"1\":{\"26\":1,\"30\":1}}],[\"transfer\",{\"1\":{\"58\":1}}],[\"trace\",{\"1\":{\"7\":3}}],[\"true\",{\"1\":{\"34\":1,\"36\":1,\"58\":3}}],[\"they\",{\"1\":{\"58\":1}}],[\"these\",{\"1\":{\"58\":1}}],[\"the\",{\"1\":{\"29\":2,\"34\":1,\"37\":4,\"58\":2,\"60\":4}}],[\"this\",{\"1\":{\"29\":2,\"58\":1,\"60\":1}}],[\"thread\",{\"1\":{\"7\":6}}],[\"thresholdfilter\",{\"1\":{\"7\":2}}],[\"token\",{\"1\":{\"29\":3,\"35\":3}}],[\"to\",{\"1\":{\"29\":4,\"36\":2,\"37\":1,\"58\":5,\"60\":6}}],[\"tls1\",{\"1\":{\"60\":3}}],[\"tls\",{\"1\":{\"26\":1,\"60\":2}}],[\"type\",{\"1\":{\"9\":6,\"10\":1,\"21\":1,\"35\":2,\"36\":6}}],[\"tcp\",{\"1\":{\"9\":4,\"19\":1,\"28\":4,\"36\":4}}],[\"tencent\",{\"1\":{\"40\":1}}],[\"testcontroller\",{\"1\":{\"7\":2}}],[\"template\",{\"1\":{\"14\":2}}],[\"temp\",{\"1\":{\"7\":1}}],[\"time\",{\"1\":{\"49\":2,\"59\":2}}],[\"timezone\",{\"1\":{\"7\":8}}],[\"timestamp\",{\"1\":{\"7\":8,\"59\":1}}],[\"tmp\",{\"1\":{\"7\":1,\"58\":3,\"59\":1}}],[\"tmpdir\",{\"1\":{\"7\":1}}],[\"i18n\",{\"1\":{\"35\":1}}],[\"identifiable\",{\"1\":{\"58\":1}}],[\"idle\",{\"1\":{\"58\":1}}],[\"id\",{\"1\":{\"29\":1}}],[\"is\",{\"1\":{\"29\":1,\"58\":1,\"60\":2}}],[\"ipaddr\",{\"1\":{\"21\":1}}],[\"ipv6\",{\"1\":{\"21\":4}}],[\"ipv6init\",{\"1\":{\"21\":1}}],[\"ipv4\",{\"1\":{\"21\":1}}],[\"ip\",{\"0\":{\"42\":1},\"1\":{\"19\":1,\"21\":3,\"25\":1,\"29\":1,\"35\":1,\"36\":1,\"42\":2,\"43\":1,\"60\":1,\"65\":1}}],[\"ilm\",{\"1\":{\"13\":2,\"14\":2}}],[\"image\",{\"1\":{\"10\":3}}],[\"ifcfg\",{\"1\":{\"21\":1}}],[\"if\",{\"1\":{\"9\":1,\"36\":1,\"58\":1,\"60\":2}}],[\"i\",{\"1\":{\"7\":2}}],[\"io\",{\"1\":{\"7\":2}}],[\"interfaces\",{\"1\":{\"60\":1}}],[\"into\",{\"1\":{\"58\":1}}],[\"ini\",{\"1\":{\"60\":1,\"65\":1}}],[\"initial\",{\"1\":{\"34\":1}}],[\"initialized\",{\"1\":{\"29\":1}}],[\"init\",{\"1\":{\"29\":2,\"37\":1}}],[\"ingester\",{\"1\":{\"58\":3}}],[\"ingestion\",{\"1\":{\"58\":2}}],[\"inmemory\",{\"1\":{\"58\":3}}],[\"in\",{\"1\":{\"37\":6,\"63\":1,\"64\":1}}],[\"inspect\",{\"1\":{\"31\":1}}],[\"instance\",{\"1\":{\"58\":1}}],[\"install\",{\"1\":{\"10\":1,\"17\":1,\"23\":1,\"40\":1}}],[\"instructions\",{\"1\":{\"29\":1}}],[\"insecure\",{\"1\":{\"24\":1}}],[\"index\",{\"1\":{\"9\":1,\"14\":3,\"15\":2,\"36\":1,\"58\":5}}],[\"input\",{\"1\":{\"9\":1,\"36\":1}}],[\"include\",{\"1\":{\"7\":2}}],[\"information\",{\"1\":{\"58\":1}}],[\"info\",{\"1\":{\"6\":1,\"7\":5}}],[\"{\",{\"1\":{\"7\":34,\"9\":13,\"13\":9,\"14\":2,\"23\":1,\"24\":1,\"34\":1,\"36\":15,\"37\":2,\"42\":1,\"43\":2,\"59\":2,\"63\":5,\"64\":5}}],[\"$\",{\"1\":{\"7\":25,\"34\":1,\"37\":25,\"59\":1,\"63\":6,\"64\":8}}],[\"view\",{\"1\":{\"37\":1}}],[\"vim\",{\"1\":{\"21\":1,\"23\":1,\"35\":1,\"36\":1,\"42\":1,\"47\":1,\"48\":1,\"49\":1}}],[\"vxv8rssmk743ojnwacrr2e7c\",{\"1\":{\"29\":2}}],[\"v11\",{\"1\":{\"58\":1}}],[\"v1\",{\"1\":{\"26\":4,\"30\":4,\"59\":1}}],[\"var\",{\"1\":{\"18\":6,\"24\":1,\"46\":1,\"47\":1,\"48\":1,\"50\":2}}],[\"validator\",{\"1\":{\"7\":1}}],[\"values\",{\"1\":{\"60\":1}}],[\"value\",{\"1\":{\"7\":1,\"60\":1}}],[\"v\",{\"1\":{\"18\":11,\"24\":1,\"63\":1,\"64\":1}}],[\"volumes\",{\"1\":{\"10\":2}}],[\"version\",{\"1\":{\"5\":4,\"7\":1,\"9\":1,\"10\":1,\"29\":1,\"36\":1,\"60\":2}}],[\"路径\",{\"1\":{\"7\":1}}],[\"_\",{\"1\":{\"7\":65,\"9\":8,\"10\":12,\"13\":7,\"14\":13,\"15\":1,\"18\":2,\"21\":11,\"34\":2,\"36\":9,\"37\":22,\"42\":2,\"43\":3,\"44\":1,\"47\":2,\"48\":1,\"49\":6,\"50\":18,\"56\":2,\"58\":53,\"59\":19,\"60\":7,\"63\":12,\"64\":16}}],[\"名称\",{\"1\":{\"7\":1,\"10\":1}}],[\"应用\",{\"1\":{\"7\":1}}],[\"输出\",{\"1\":{\"7\":14,\"61\":2}}],[\"配置文件\",{\"0\":{\"9\":1},\"1\":{\"10\":1,\"34\":1,\"36\":1,\"47\":1,\"48\":1,\"49\":1}}],[\"配置\",{\"0\":{\"38\":1,\"41\":1,\"57\":1,\"58\":1,\"59\":1,\"60\":1,\"65\":1},\"1\":{\"7\":1,\"23\":1,\"24\":5,\"26\":1,\"34\":1,\"35\":1,\"38\":1,\"43\":1,\"44\":1,\"58\":2,\"60\":1,\"65\":2}}],[\"默认值\",{\"1\":{\"58\":3}}],[\"默认\",{\"1\":{\"7\":8,\"34\":1,\"36\":1,\"43\":1,\"58\":5,\"60\":1,\"61\":1,\"65\":1}}],[\"引用\",{\"1\":{\"7\":1}}],[\"85\",{\"1\":{\"37\":3}}],[\"8.10.1\",{\"1\":{\"34\":2,\"35\":2,\"36\":1,\"37\":2}}],[\"8.10\",{\"1\":{\"34\":2}}],[\"8.8.8.8\",{\"1\":{\"21\":1}}],[\"8099\",{\"1\":{\"43\":1}}],[\"80\",{\"1\":{\"30\":1,\"43\":1}}],[\"8080\",{\"1\":{\"6\":1,\"30\":1}}],[\"8346\",{\"1\":{\"21\":1}}],[\"824\",{\"1\":{\"21\":1}}],[\"8\",{\"1\":{\"7\":7,\"29\":2}}],[\"168\",{\"1\":{\"58\":1}}],[\"163.\",{\"1\":{\"23\":1}}],[\"11.5.1\",{\"1\":{\"50\":3}}],[\"127.0.0.1\",{\"1\":{\"58\":1}}],[\"12\",{\"1\":{\"48\":1}}],[\"1550415608\",{\"1\":{\"50\":3}}],[\"15504156082019021711.5.1\",{\"1\":{\"46\":1}}],[\"15\",{\"1\":{\"37\":3}}],[\"1.25\",{\"1\":{\"30\":2}}],[\"1.0\",{\"1\":{\"7\":1}}],[\"17\",{\"1\":{\"21\":1,\"50\":3}}],[\"192.168.1.24\",{\"1\":{\"50\":3}}],[\"192.168.1.25\",{\"1\":{\"50\":1}}],[\"192.168.0.194\",{\"1\":{\"35\":4,\"36\":1}}],[\"192.168.0.1\",{\"1\":{\"21\":1}}],[\"192.168.0.103\",{\"1\":{\"21\":1}}],[\"192.168.0.102\",{\"1\":{\"21\":1}}],[\"192.168.0.101\",{\"1\":{\"21\":1,\"29\":3}}],[\"192.168.0.100\",{\"1\":{\"21\":2,\"24\":1,\"26\":3,\"30\":4}}],[\"192.168.91.131\",{\"1\":{\"6\":1}}],[\"19999\",{\"1\":{\"19\":3}}],[\"1\",{\"1\":{\"12\":1,\"13\":1,\"14\":2,\"29\":2,\"34\":2,\"37\":6,\"48\":6,\"58\":7,\"61\":3,\"63\":3,\"64\":3}}],[\"10.1.0\",{\"1\":{\"60\":1}}],[\"10.3.3.\",{\"1\":{\"56\":1}}],[\"1024\",{\"1\":{\"38\":1}}],[\"10001\",{\"1\":{\"43\":1}}],[\"100\",{\"1\":{\"13\":1}}],[\"10\",{\"1\":{\"7\":4,\"58\":1}}],[\"\\\"\",{\"1\":{\"7\":240,\"9\":40,\"10\":8,\"13\":26,\"14\":18,\"15\":4,\"23\":4,\"24\":4,\"34\":4,\"35\":4,\"36\":54,\"37\":38,\"47\":2,\"59\":4,\"60\":2,\"63\":16,\"64\":20}}],[\"=\",{\"1\":{\"7\":62,\"9\":29,\"10\":4,\"18\":4,\"19\":3,\"21\":19,\"24\":1,\"28\":4,\"36\":33,\"37\":5,\"38\":1,\"43\":1,\"47\":1,\"48\":1,\"49\":3,\"50\":1,\"59\":1,\"60\":7,\"61\":4,\"63\":2,\"64\":4}}],[\"?\",{\"1\":{\"7\":2,\"37\":3,\"59\":7}}],[\"ring\",{\"1\":{\"58\":3}}],[\"rfc3339nano\",{\"1\":{\"59\":1}}],[\"rf\",{\"1\":{\"48\":1}}],[\"rate\",{\"1\":{\"58\":1}}],[\"rails\",{\"1\":{\"47\":1,\"49\":2}}],[\"rake\",{\"1\":{\"46\":1,\"48\":1,\"50\":1}}],[\"rb\",{\"1\":{\"42\":2,\"44\":1,\"47\":2,\"49\":2}}],[\"ruler\",{\"1\":{\"58\":1}}],[\"rules\",{\"1\":{\"58\":2}}],[\"ruby\",{\"1\":{\"36\":2}}],[\"run\",{\"1\":{\"18\":3,\"24\":1,\"29\":2,\"37\":1}}],[\"r\",{\"1\":{\"34\":2,\"35\":1}}],[\"rm\",{\"1\":{\"31\":2}}],[\"ro\",{\"1\":{\"18\":8}}],[\"rollover\",{\"1\":{\"14\":1}}],[\"rollingpolicy\",{\"1\":{\"7\":4}}],[\"rollingfileappender\",{\"1\":{\"7\":2}}],[\"rolling\",{\"1\":{\"7\":4}}],[\"root\",{\"1\":{\"6\":1,\"7\":2,\"29\":1,\"30\":5,\"50\":1,\"60\":1}}],[\"rebinding\",{\"1\":{\"60\":1}}],[\"redirect\",{\"1\":{\"60\":1}}],[\"regex\",{\"1\":{\"59\":1}}],[\"registries\",{\"1\":{\"24\":1}}],[\"registry2\",{\"1\":{\"21\":1,\"24\":1}}],[\"registry\",{\"0\":{\"21\":1,\"22\":1,\"24\":1},\"1\":{\"21\":4,\"23\":1,\"24\":5,\"25\":1,\"26\":2,\"30\":3}}],[\"retries\",{\"1\":{\"58\":1}}],[\"retain\",{\"1\":{\"58\":1}}],[\"retention\",{\"1\":{\"58\":2}}],[\"reject\",{\"1\":{\"58\":2}}],[\"reconfigure\",{\"1\":{\"43\":1,\"44\":1,\"47\":1,\"49\":1}}],[\"record\",{\"1\":{\"7\":2,\"9\":2,\"36\":2}}],[\"ready\",{\"1\":{\"29\":3}}],[\"restore\",{\"1\":{\"50\":1}}],[\"restarted\",{\"1\":{\"37\":1}}],[\"restart\",{\"1\":{\"18\":1,\"21\":1,\"23\":1,\"24\":2,\"37\":5,\"43\":1,\"44\":1,\"48\":1,\"63\":4,\"64\":4}}],[\"result\",{\"1\":{\"36\":2}}],[\"resource\",{\"1\":{\"7\":2}}],[\"reporting\",{\"1\":{\"58\":2}}],[\"report\",{\"1\":{\"58\":1}}],[\"repository\",{\"1\":{\"5\":1}}],[\"replication\",{\"1\":{\"58\":2}}],[\"replicas\",{\"1\":{\"14\":1,\"30\":1}}],[\"remove\",{\"1\":{\"9\":4,\"36\":2}}],[\"refer\",{\"1\":{\"58\":1}}],[\"ref\",{\"1\":{\"7\":14}}],[\"reload\",{\"1\":{\"19\":1,\"23\":1,\"24\":1,\"28\":1,\"48\":1}}],[\"relativepath\",{\"1\":{\"5\":1}}],[\"releases\",{\"1\":{\"54\":1,\"55\":1}}],[\"release\",{\"1\":{\"5\":1,\"18\":2}}],[\"labels\",{\"1\":{\"59\":3}}],[\"labs\",{\"1\":{\"56\":1,\"58\":1}}],[\"layout\",{\"1\":{\"35\":1}}],[\"lpg\",{\"0\":{\"52\":1},\"1\":{\"63\":1,\"64\":1}}],[\"ls\",{\"1\":{\"29\":1,\"31\":1}}],[\"leave\",{\"1\":{\"31\":2}}],[\"leader\",{\"1\":{\"29\":1}}],[\"learn\",{\"1\":{\"17\":1}}],[\"levels\",{\"1\":{\"58\":1}}],[\"levelfilter\",{\"1\":{\"7\":2}}],[\"level\",{\"1\":{\"6\":1,\"7\":24,\"59\":2}}],[\"like\",{\"1\":{\"58\":1}}],[\"limits\",{\"1\":{\"58\":1}}],[\"listen\",{\"1\":{\"43\":2,\"58\":2,\"59\":2}}],[\"list\",{\"1\":{\"19\":1}}],[\"lib\",{\"1\":{\"18\":1,\"24\":1}}],[\"lifecycler\",{\"1\":{\"58\":1}}],[\"lifecycle\",{\"1\":{\"14\":2}}],[\"linux\",{\"0\":{\"17\":1},\"1\":{\"54\":2,\"55\":2,\"56\":2,\"61\":4,\"63\":2,\"64\":1}}],[\"links\",{\"1\":{\"10\":2}}],[\"lines\",{\"1\":{\"9\":4,\"10\":2,\"36\":4,\"58\":1}}],[\"l\",{\"1\":{\"10\":1}}],[\"look\",{\"1\":{\"58\":1}}],[\"lookup\",{\"1\":{\"5\":1}}],[\"location\",{\"1\":{\"58\":1}}],[\"locale\",{\"1\":{\"35\":1}}],[\"local\",{\"1\":{\"34\":4,\"35\":3,\"36\":2,\"37\":3,\"61\":4,\"63\":2,\"64\":2}}],[\"localtime\",{\"1\":{\"18\":2}}],[\"localhost\",{\"1\":{\"7\":1,\"58\":1,\"59\":3,\"60\":1}}],[\"loki\",{\"0\":{\"54\":1,\"58\":1},\"1\":{\"54\":2,\"55\":1,\"58\":13,\"59\":1,\"61\":6,\"63\":18,\"65\":1}}],[\"logger\",{\"1\":{\"7\":13}}],[\"loggingeventcompositejsonencoder\",{\"1\":{\"7\":4}}],[\"logging\",{\"1\":{\"6\":1,\"7\":2,\"35\":1}}],[\"logs\",{\"1\":{\"7\":1,\"34\":3,\"35\":1,\"37\":2,\"59\":2}}],[\"logstashtcpsocketappender\",{\"1\":{\"7\":4}}],[\"logstash\",{\"0\":{\"9\":1,\"36\":1},\"1\":{\"5\":2,\"6\":1,\"7\":14,\"9\":4,\"10\":10,\"34\":1,\"36\":8,\"37\":7,\"38\":1}}],[\"log\",{\"1\":{\"7\":27,\"13\":1,\"14\":2,\"18\":2,\"35\":1,\"37\":11,\"44\":1,\"59\":2,\"61\":2}}],[\"logback\",{\"0\":{\"7\":1},\"1\":{\"5\":2,\"7\":18}}],[\"pkg\",{\"1\":{\"58\":1}}],[\"performance\",{\"1\":{\"58\":1}}],[\"per\",{\"1\":{\"58\":1}}],[\"period\",{\"1\":{\"58\":4}}],[\"permanent\",{\"1\":{\"19\":1,\"28\":4}}],[\"ps\",{\"1\":{\"31\":1,\"63\":1,\"64\":1}}],[\"p\",{\"1\":{\"24\":1,\"30\":1,\"37\":4,\"59\":4}}],[\"push\",{\"1\":{\"26\":1,\"30\":1,\"59\":1}}],[\"pull\",{\"1\":{\"26\":2,\"30\":2}}],[\"publicbaseurl\",{\"1\":{\"35\":1}}],[\"public\",{\"1\":{\"19\":2,\"60\":2}}],[\"put\",{\"1\":{\"13\":1,\"14\":1}}],[\"ptrace\",{\"1\":{\"18\":1}}],[\"prevents\",{\"1\":{\"60\":1}}],[\"prefix\",{\"1\":{\"58\":2}}],[\"pretty\",{\"1\":{\"31\":1}}],[\"print\",{\"1\":{\"63\":1,\"64\":1}}],[\"prioritize\",{\"1\":{\"58\":1}}],[\"priority\",{\"1\":{\"13\":2}}],[\"privacy\",{\"1\":{\"21\":1}}],[\"protocol\",{\"1\":{\"60\":3}}],[\"promtail\",{\"0\":{\"55\":1,\"59\":1,\"64\":1},\"1\":{\"55\":1,\"59\":1,\"61\":6,\"64\":19}}],[\"proxy\",{\"1\":{\"21\":1}}],[\"proc\",{\"1\":{\"18\":2}}],[\"project\",{\"1\":{\"7\":4}}],[\"providers\",{\"1\":{\"7\":8}}],[\"property\",{\"1\":{\"7\":1}}],[\"phases\",{\"1\":{\"13\":1}}],[\"positions\",{\"1\":{\"59\":2}}],[\"postgresql\",{\"1\":{\"44\":2}}],[\"policy\",{\"1\":{\"13\":3,\"14\":1}}],[\"ports\",{\"1\":{\"10\":3,\"19\":1}}],[\"port\",{\"1\":{\"6\":1,\"9\":5,\"19\":1,\"28\":4,\"34\":1,\"35\":1,\"36\":5,\"43\":2,\"58\":2,\"59\":2,\"60\":3}}],[\"plugin\",{\"1\":{\"10\":1}}],[\"plugins\",{\"1\":{\"10\":2}}],[\"pipeline\",{\"1\":{\"10\":1,\"36\":1,\"59\":2}}],[\"pid\",{\"1\":{\"7\":6,\"18\":1,\"37\":8}}],[\"password\",{\"1\":{\"36\":1}}],[\"passwd\",{\"1\":{\"18\":2}}],[\"parameter\",{\"1\":{\"36\":2}}],[\"parent\",{\"1\":{\"5\":4}}],[\"patterns\",{\"1\":{\"14\":1,\"15\":1}}],[\"pattern\",{\"1\":{\"7\":22}}],[\"path\",{\"1\":{\"7\":4,\"34\":2,\"47\":1,\"56\":2,\"58\":1,\"59\":2,\"63\":4,\"64\":3}}],[\"bash\",{\"1\":{\"63\":1,\"64\":1}}],[\"backups\",{\"1\":{\"46\":1,\"47\":1,\"48\":1,\"50\":2}}],[\"backup\",{\"1\":{\"46\":1,\"47\":1,\"48\":2,\"49\":2,\"50\":5}}],[\"background\",{\"1\":{\"37\":3}}],[\"bloc\",{\"1\":{\"59\":2}}],[\"block\",{\"1\":{\"58\":1}}],[\"blob\",{\"1\":{\"58\":1}}],[\"be\",{\"1\":{\"60\":1}}],[\"better\",{\"1\":{\"58\":1}}],[\"beats\",{\"1\":{\"36\":1}}],[\"by\",{\"1\":{\"58\":1,\"60\":1}}],[\"buildreport\",{\"1\":{\"58\":1}}],[\"but\",{\"1\":{\"58\":1}}],[\"burst\",{\"1\":{\"58\":1}}],[\"busybox\",{\"1\":{\"26\":7}}],[\"business\",{\"1\":{\"7\":2,\"9\":1,\"36\":1}}],[\"boltdb\",{\"1\":{\"58\":2}}],[\"bootproto\",{\"1\":{\"21\":1}}],[\"boot\",{\"0\":{\"3\":1,\"4\":1},\"1\":{\"5\":2,\"7\":2}}],[\"binary\",{\"1\":{\"64\":3}}],[\"bind\",{\"1\":{\"60\":2}}],[\"bin\",{\"1\":{\"34\":1,\"35\":4,\"36\":1,\"37\":8,\"48\":1,\"63\":1,\"64\":1}}],[\"browser\",{\"1\":{\"21\":1,\"60\":1}}],[\"brick\",{\"1\":{\"6\":1}}],[\"full\",{\"1\":{\"60\":1}}],[\"features\",{\"1\":{\"58\":1}}],[\"f\",{\"1\":{\"36\":1,\"37\":2}}],[\"found\",{\"1\":{\"67\":1}}],[\"format\",{\"1\":{\"59\":1}}],[\"for\",{\"1\":{\"34\":1,\"36\":1,\"37\":2,\"58\":2}}],[\"force\",{\"1\":{\"31\":1}}],[\"fortess\",{\"1\":{\"14\":1}}],[\"fortress\",{\"1\":{\"7\":6,\"9\":1,\"12\":1,\"14\":1,\"15\":1}}],[\"fort\",{\"1\":{\"6\":1,\"7\":2}}],[\"follow\",{\"1\":{\"29\":1}}],[\"following\",{\"1\":{\"29\":1,\"58\":1}}],[\"facing\",{\"1\":{\"60\":2}}],[\"factor\",{\"1\":{\"58\":2}}],[\"false\",{\"1\":{\"58\":2,\"60\":1}}],[\"fatal\",{\"1\":{\"21\":2}}],[\"failure\",{\"1\":{\"21\":2}}],[\"firewall\",{\"1\":{\"19\":3,\"28\":5}}],[\"field\",{\"1\":{\"9\":4,\"36\":2}}],[\"filter\",{\"1\":{\"7\":12,\"9\":1,\"36\":1}}],[\"filesystem\",{\"1\":{\"58\":5}}],[\"filename\",{\"1\":{\"35\":1,\"59\":1}}],[\"filenamepattern\",{\"1\":{\"7\":4}}],[\"file\",{\"1\":{\"7\":14,\"35\":1,\"37\":8,\"56\":2,\"61\":4,\"63\":1,\"64\":3}}],[\"from\",{\"1\":{\"5\":1,\"58\":1,\"60\":1}}],[\"ngnix\",{\"1\":{\"30\":4}}],[\"nginx\",{\"1\":{\"30\":2,\"43\":2,\"44\":2}}],[\"nj1cmql0jkz5s954yi3oex3nedyz0fb0xx14ie39trti4wxv\",{\"1\":{\"29\":2}}],[\"not\",{\"1\":{\"60\":1,\"67\":1}}],[\"nothing\",{\"1\":{\"60\":1}}],[\"nohup\",{\"1\":{\"35\":1,\"36\":1,\"37\":2,\"61\":6,\"63\":1,\"64\":1}}],[\"now\",{\"1\":{\"29\":1}}],[\"no\",{\"1\":{\"21\":3}}],[\"none\",{\"1\":{\"21\":1}}],[\"nodes\",{\"1\":{\"34\":1}}],[\"node\",{\"1\":{\"10\":1,\"29\":2,\"31\":1,\"34\":3,\"38\":2}}],[\"number\",{\"1\":{\"14\":2}}],[\"name\",{\"1\":{\"6\":1,\"7\":24,\"10\":4,\"14\":1,\"18\":1,\"21\":1,\"24\":1,\"30\":1,\"34\":2,\"59\":2,\"60\":1}}],[\"netmask\",{\"1\":{\"21\":1}}],[\"network\",{\"1\":{\"18\":1,\"21\":2,\"34\":1}}],[\"netdatacache\",{\"1\":{\"18\":1}}],[\"netdataconfig\",{\"1\":{\"18\":1}}],[\"netdatalib\",{\"1\":{\"18\":1}}],[\"netdata\",{\"0\":{\"17\":1},\"1\":{\"17\":2,\"18\":9}}],[\"net\",{\"1\":{\"5\":1,\"7\":8}}],[\":\",{\"1\":{\"6\":10,\"7\":48,\"9\":1,\"10\":38,\"13\":11,\"14\":6,\"15\":1,\"18\":19,\"19\":2,\"23\":2,\"24\":5,\"26\":6,\"29\":4,\"30\":11,\"34\":10,\"35\":16,\"36\":2,\"37\":9,\"42\":1,\"43\":2,\"46\":2,\"48\":3,\"50\":3,\"58\":63,\"59\":38,\"60\":3,\"63\":1,\"64\":1,\"65\":2}}],[\"awk\",{\"1\":{\"63\":1,\"64\":1}}],[\"attacks\",{\"1\":{\"60\":1}}],[\"at\",{\"1\":{\"58\":1}}],[\"are\",{\"1\":{\"58\":1,\"60\":1}}],[\"artifactid\",{\"1\":{\"5\":4}}],[\"analytics\",{\"1\":{\"58\":2}}],[\"anonymous\",{\"1\":{\"58\":1}}],[\"and\",{\"1\":{\"29\":1,\"40\":1,\"58\":3}}],[\"auth\",{\"1\":{\"58\":1}}],[\"automatically\",{\"1\":{\"34\":1}}],[\"autoconf\",{\"1\":{\"21\":1}}],[\"amd64\",{\"1\":{\"54\":1,\"55\":1,\"56\":1,\"61\":4,\"63\":2,\"64\":1}}],[\"availability\",{\"1\":{\"29\":1}}],[\"a\",{\"1\":{\"29\":3,\"36\":1,\"58\":1,\"60\":1}}],[\"api\",{\"1\":{\"26\":1,\"59\":1}}],[\"apparmor\",{\"1\":{\"18\":1}}],[\"app\",{\"1\":{\"7\":7}}],[\"appenders\",{\"1\":{\"35\":1}}],[\"appender\",{\"1\":{\"7\":24}}],[\"application\",{\"0\":{\"6\":1},\"1\":{\"6\":1,\"7\":1}}],[\"all\",{\"1\":{\"60\":1}}],[\"allowed\",{\"1\":{\"60\":1}}],[\"allow\",{\"1\":{\"34\":1}}],[\"alertmanager\",{\"1\":{\"58\":1}}],[\"always\",{\"1\":{\"24\":1}}],[\"alias\",{\"1\":{\"14\":1}}],[\"a9ae\",{\"1\":{\"21\":1}}],[\"advertise\",{\"1\":{\"29\":2}}],[\"admin\",{\"1\":{\"18\":1,\"65\":2}}],[\"adduser\",{\"1\":{\"33\":1}}],[\"address\",{\"1\":{\"60\":1}}],[\"addr\",{\"1\":{\"21\":1,\"29\":2,\"58\":1,\"60\":1}}],[\"add\",{\"1\":{\"18\":2,\"19\":1,\"28\":4,\"29\":2}}],[\"access\",{\"1\":{\"60\":1}}],[\"acces\",{\"1\":{\"44\":1}}],[\"accepted\",{\"1\":{\"60\":1}}],[\"accept\",{\"1\":{\"7\":2}}],[\"active\",{\"1\":{\"29\":3,\"58\":1}}],[\"actions\",{\"1\":{\"13\":2}}],[\"age\",{\"1\":{\"13\":2,\"58\":1}}],[\"asia\",{\"1\":{\"7\":4}}],[\"ef\",{\"1\":{\"63\":1,\"64\":1}}],[\"empty\",{\"1\":{\"60\":2}}],[\"expression\",{\"1\":{\"59\":1}}],[\"export\",{\"1\":{\"37\":3}}],[\"external\",{\"1\":{\"42\":2,\"43\":1}}],[\"exit\",{\"1\":{\"37\":3,\"63\":1,\"64\":1}}],[\"exception\",{\"1\":{\"7\":3}}],[\"event\",{\"1\":{\"36\":4}}],[\"ep8anhf9h4uox6j00k81ixsbc\",{\"1\":{\"29\":1}}],[\"echo\",{\"1\":{\"24\":1,\"37\":13,\"63\":3,\"64\":3}}],[\"ec4bd\",{\"1\":{\"21\":1}}],[\"ethernet\",{\"1\":{\"21\":1}}],[\"etcd\",{\"1\":{\"58\":1}}],[\"etc\",{\"1\":{\"18\":9,\"21\":1,\"23\":1,\"24\":1,\"37\":1,\"42\":1,\"47\":1,\"48\":2,\"49\":2}}],[\"enforce\",{\"1\":{\"60\":1}}],[\"enrollment\",{\"1\":{\"35\":3}}],[\"enabled\",{\"1\":{\"34\":2,\"58\":3}}],[\"engine\",{\"1\":{\"23\":1,\"29\":1}}],[\"ens33\",{\"1\":{\"21\":3}}],[\"environment\",{\"1\":{\"10\":2}}],[\"encoding\",{\"1\":{\"7\":1}}],[\"encoder\",{\"1\":{\"5\":1,\"7\":16}}],[\"e\",{\"1\":{\"10\":1}}],[\"esac\",{\"1\":{\"37\":3,\"63\":1,\"64\":1}}],[\"es\",{\"1\":{\"9\":1,\"10\":6,\"33\":2,\"34\":9,\"35\":2,\"37\":19}}],[\"elastic\",{\"1\":{\"34\":4,\"35\":1,\"36\":5}}],[\"elasticsearch\",{\"0\":{\"12\":1,\"34\":1},\"1\":{\"9\":1,\"10\":22,\"34\":9,\"35\":2,\"36\":3,\"37\":9,\"38\":1}}],[\"elk\",{\"0\":{\"3\":1,\"8\":1,\"33\":1},\"1\":{\"6\":1,\"9\":1,\"10\":8,\"34\":2}}],[\"error\",{\"1\":{\"7\":10,\"9\":1,\"36\":1,\"59\":3}}],[\"!\",{\"1\":{\"5\":1,\"7\":26,\"37\":7,\"63\":1,\"64\":1}}],[\"sleep\",{\"1\":{\"63\":1,\"64\":1}}],[\"slf4j\",{\"1\":{\"7\":1}}],[\"show\",{\"1\":{\"58\":1}}],[\"shipper\",{\"1\":{\"58\":2}}],[\"shell\",{\"1\":{\"48\":1}}],[\"sh\",{\"0\":{\"64\":1},\"1\":{\"37\":3}}],[\"shards\",{\"1\":{\"14\":1}}],[\"shared\",{\"1\":{\"58\":2}}],[\"share\",{\"1\":{\"10\":4}}],[\"shanghai\",{\"1\":{\"7\":4}}],[\"s4dcmp3fsekemqwttwsa\",{\"1\":{\"36\":1}}],[\"samples\",{\"1\":{\"58\":2}}],[\"sample\",{\"1\":{\"36\":2}}],[\"s\",{\"1\":{\"35\":1,\"58\":1,\"59\":3,\"60\":3}}],[\"su\",{\"1\":{\"34\":1,\"35\":1,\"37\":5}}],[\"sudo\",{\"1\":{\"21\":1,\"28\":5,\"43\":2,\"46\":1,\"47\":1,\"48\":3,\"49\":2,\"50\":1}}],[\"ssl\",{\"1\":{\"34\":1,\"36\":1}}],[\"swmtkn\",{\"1\":{\"29\":2}}],[\"swarm\",{\"0\":{\"27\":1},\"1\":{\"21\":1,\"29\":8,\"31\":2}}],[\"swagger\",{\"1\":{\"7\":1}}],[\"scrape\",{\"1\":{\"59\":1}}],[\"scripts\",{\"1\":{\"21\":1}}],[\"schema\",{\"1\":{\"58\":2}}],[\"scp\",{\"1\":{\"50\":1}}],[\"scope\",{\"1\":{\"7\":2}}],[\"stderr\",{\"1\":{\"59\":1}}],[\"stdout\",{\"1\":{\"59\":1}}],[\"stream\",{\"1\":{\"59\":2}}],[\"streams\",{\"1\":{\"58\":1}}],[\"store\",{\"1\":{\"58\":6}}],[\"storage\",{\"1\":{\"58\":2}}],[\"stopping\",{\"1\":{\"63\":1,\"64\":1}}],[\"stopped\",{\"1\":{\"18\":1,\"37\":4}}],[\"stop\",{\"1\":{\"37\":5,\"44\":1,\"50\":2,\"63\":5,\"64\":5}}],[\"stages\",{\"1\":{\"59\":3}}],[\"starting\",{\"1\":{\"63\":1,\"64\":1}}],[\"started\",{\"1\":{\"37\":2}}],[\"starter\",{\"1\":{\"5\":1}}],[\"startup\",{\"1\":{\"37\":2}}],[\"start\",{\"1\":{\"34\":1,\"37\":6,\"44\":1,\"50\":1,\"63\":5,\"64\":5}}],[\"stats\",{\"1\":{\"58\":2}}],[\"statistics\",{\"1\":{\"58\":2}}],[\"static\",{\"1\":{\"21\":1,\"59\":2}}],[\"status\",{\"1\":{\"29\":2,\"44\":1}}],[\"stable\",{\"1\":{\"21\":1}}],[\"stack\",{\"1\":{\"7\":3,\"34\":1}}],[\"stash\",{\"1\":{\"7\":13}}],[\"socket\",{\"1\":{\"60\":1}}],[\"sock\",{\"1\":{\"18\":2}}],[\"source\",{\"1\":{\"7\":2,\"9\":1,\"36\":1,\"59\":2}}],[\"systemctl\",{\"1\":{\"21\":1,\"23\":2,\"24\":2}}],[\"sysconfig\",{\"1\":{\"21\":1}}],[\"sys\",{\"1\":{\"18\":4}}],[\"selector\",{\"1\":{\"59\":1}}],[\"see\",{\"1\":{\"58\":1}}],[\"sent\",{\"1\":{\"58\":2}}],[\"send\",{\"1\":{\"58\":1}}],[\"security\",{\"1\":{\"18\":1,\"34\":2}}],[\"setup\",{\"1\":{\"35\":1}}],[\"settings\",{\"1\":{\"14\":1}}],[\"set\",{\"1\":{\"13\":1,\"21\":1,\"34\":1,\"36\":2,\"60\":1}}],[\"services\",{\"1\":{\"10\":1}}],[\"service\",{\"1\":{\"7\":4,\"21\":1,\"23\":1,\"30\":1,\"31\":4,\"48\":2}}],[\"server\",{\"1\":{\"6\":1,\"9\":4,\"35\":3,\"36\":4,\"58\":1,\"59\":1,\"60\":1,\"61\":1}}],[\"sidekiq\",{\"1\":{\"50\":1}}],[\"simple\",{\"1\":{\"36\":1}}],[\"single\",{\"1\":{\"10\":1}}],[\"size\",{\"1\":{\"7\":2,\"38\":1,\"58\":2}}],[\"sizeandtimebasedrollingpolicy\",{\"1\":{\"7\":2}}],[\"space\",{\"1\":{\"38\":1}}],[\"spirng\",{\"0\":{\"7\":1}}],[\"springfox\",{\"1\":{\"7\":1}}],[\"springframework\",{\"1\":{\"5\":1,\"7\":3}}],[\"springboot\",{\"1\":{\"7\":1}}],[\"springproperty\",{\"1\":{\"7\":2}}],[\"spring\",{\"0\":{\"3\":1,\"4\":1},\"1\":{\"5\":1,\"6\":1,\"7\":1}}],[\"-\",{\"0\":{\"7\":1,\"8\":1,\"10\":1,\"22\":1},\"1\":{\"5\":9,\"6\":2,\"7\":142,\"9\":3,\"10\":25,\"12\":6,\"18\":32,\"19\":17,\"21\":15,\"23\":3,\"24\":11,\"25\":1,\"26\":1,\"28\":27,\"29\":22,\"30\":10,\"31\":4,\"34\":10,\"35\":15,\"36\":7,\"37\":21,\"38\":7,\"40\":3,\"43\":2,\"44\":8,\"46\":1,\"47\":1,\"48\":2,\"49\":1,\"50\":4,\"54\":2,\"55\":2,\"56\":5,\"58\":5,\"59\":17,\"60\":1,\"61\":21,\"63\":11,\"64\":8}}],[\"/\",{\"1\":{\"5\":9,\"7\":101,\"9\":4,\"10\":40,\"13\":2,\"14\":1,\"18\":54,\"19\":3,\"21\":4,\"23\":5,\"24\":8,\"26\":3,\"28\":8,\"30\":4,\"34\":17,\"35\":25,\"36\":18,\"37\":35,\"42\":4,\"43\":2,\"44\":1,\"46\":4,\"47\":6,\"48\":18,\"49\":5,\"50\":9,\"54\":1,\"55\":1,\"58\":40,\"59\":20,\"60\":5,\"61\":5,\"63\":9,\"64\":8,\"65\":3}}],[\".\",{\"0\":{\"6\":1,\"7\":1,\"10\":1,\"64\":1},\"1\":{\"5\":4,\"7\":96,\"9\":5,\"10\":5,\"14\":4,\"18\":2,\"21\":1,\"23\":4,\"24\":2,\"26\":4,\"27\":1,\"29\":2,\"30\":4,\"34\":14,\"35\":12,\"36\":17,\"37\":15,\"38\":3,\"40\":2,\"42\":2,\"44\":2,\"46\":3,\"47\":4,\"48\":5,\"49\":4,\"50\":6,\"54\":2,\"55\":2,\"56\":3,\"58\":8,\"59\":2,\"60\":6,\"61\":16,\"63\":2,\"64\":2,\"65\":1}}],[\">\",{\"1\":{\"5\":18,\"7\":172,\"9\":27,\"12\":2,\"24\":1,\"29\":1,\"31\":1,\"35\":1,\"36\":33,\"37\":6,\"59\":4,\"61\":4}}],[\"<\",{\"1\":{\"5\":18,\"7\":172,\"29\":1,\"31\":1,\"35\":1,\"37\":4,\"59\":4}}],[\"依赖\",{\"0\":{\"5\":1}}],[\"搭建\",{\"0\":{\"4\":1,\"21\":1,\"22\":1,\"23\":1,\"24\":1,\"27\":1},\"1\":{\"21\":6,\"26\":2,\"40\":1}}],[\"项目\",{\"0\":{\"4\":1}}],[\"）\",{\"0\":{\"3\":1},\"1\":{\"9\":1,\"58\":3,\"65\":1}}],[\"环境\",{\"0\":{\"3\":1,\"5\":1,\"23\":1,\"28\":1},\"1\":{\"21\":2}}],[\"dns\",{\"1\":{\"60\":1}}],[\"dns1\",{\"1\":{\"21\":1}}],[\"disable\",{\"1\":{\"58\":1}}],[\"discovery\",{\"1\":{\"10\":1}}],[\"directory\",{\"1\":{\"58\":5}}],[\"does\",{\"1\":{\"60\":1}}],[\"dow\",{\"1\":{\"48\":2}}],[\"download\",{\"1\":{\"40\":1,\"56\":1}}],[\"domain\",{\"1\":{\"60\":6}}],[\"dom\",{\"1\":{\"48\":2}}],[\"documentation\",{\"1\":{\"23\":1,\"58\":1}}],[\"docker\",{\"0\":{\"3\":1,\"8\":1,\"10\":1,\"18\":1,\"21\":2,\"22\":1,\"23\":1,\"24\":1,\"27\":1},\"1\":{\"9\":1,\"10\":1,\"17\":1,\"18\":3,\"21\":14,\"23\":4,\"24\":10,\"25\":1,\"26\":7,\"27\":1,\"29\":10,\"30\":10,\"31\":7},\"2\":{\"16\":1,\"20\":1,\"32\":1,\"39\":1}}],[\"dxn1zf6l61qsb1josjja83ngz\",{\"1\":{\"29\":1}}],[\"datesource\",{\"1\":{\"65\":1}}],[\"data\",{\"1\":{\"10\":5,\"34\":3}}],[\"daemon\",{\"1\":{\"23\":2,\"24\":2}}],[\"dd\",{\"1\":{\"7\":2,\"9\":1,\"36\":1}}],[\"d\",{\"1\":{\"7\":2,\"10\":1,\"18\":1,\"24\":1,\"34\":1,\"37\":3,\"56\":1}}],[\"description\",{\"1\":{\"37\":3}}],[\"destination\",{\"1\":{\"7\":8}}],[\"device\",{\"1\":{\"21\":1}}],[\"defroute\",{\"1\":{\"21\":2}}],[\"default\",{\"1\":{\"35\":1,\"58\":1,\"60\":1}}],[\"defaultvalue\",{\"1\":{\"7\":2}}],[\"defaults\",{\"1\":{\"7\":1,\"60\":1,\"65\":1}}],[\"deletes\",{\"1\":{\"58\":1}}],[\"delete\",{\"1\":{\"13\":3,\"14\":2}}],[\"deny\",{\"1\":{\"7\":2}}],[\"debug\",{\"1\":{\"7\":13,\"9\":1,\"36\":1,\"59\":4}}],[\"depends\",{\"1\":{\"10\":2}}],[\"dependency\",{\"1\":{\"5\":2}}],[\"deploy\",{\"2\":{\"2\":1,\"16\":1,\"20\":1,\"32\":1,\"39\":1,\"51\":1,\"66\":1}}],[\"基于\",{\"0\":{\"3\":1}}],[\"（\",{\"0\":{\"3\":1},\"1\":{\"9\":1,\"58\":3,\"65\":1}}],[\" \",{\"0\":{\"3\":3,\"4\":1,\"8\":1,\"12\":1,\"21\":1,\"24\":1,\"27\":2,\"33\":1,\"40\":1,\"42\":1,\"52\":1},\"1\":{\"5\":17,\"6\":14,\"7\":274,\"9\":116,\"10\":84,\"12\":4,\"13\":33,\"14\":16,\"15\":1,\"17\":6,\"18\":55,\"19\":12,\"21\":32,\"23\":18,\"24\":28,\"26\":13,\"27\":2,\"28\":35,\"29\":95,\"30\":33,\"31\":29,\"33\":4,\"34\":61,\"35\":46,\"36\":176,\"37\":210,\"38\":6,\"40\":7,\"42\":9,\"43\":14,\"44\":19,\"46\":5,\"47\":11,\"48\":66,\"49\":22,\"50\":22,\"54\":3,\"55\":3,\"56\":15,\"58\":204,\"59\":75,\"60\":111,\"61\":33,\"63\":63,\"64\":65,\"65\":6,\"67\":2}}],[\"篇\",{\"0\":{\"1\":1}}],[\"。\",{\"1\":{\"0\":1,\"10\":1,\"12\":2,\"15\":1,\"26\":1,\"31\":1,\"33\":1,\"34\":1,\"43\":2,\"48\":7,\"58\":13,\"61\":1}}],[\"在子\",{\"1\":{\"29\":1}}],[\"在\",{\"1\":{\"0\":1,\"10\":2,\"21\":1,\"26\":2,\"28\":1,\"29\":1,\"31\":2,\"34\":1,\"38\":1,\"43\":1,\"46\":1,\"49\":1,\"50\":1,\"58\":6}}],[\"档案\",{\"1\":{\"0\":1}}],[\"和\",{\"1\":{\"0\":1,\"28\":1,\"34\":1,\"43\":1,\"50\":1,\"58\":4}}],[\"的\",{\"1\":{\"0\":1,\"7\":4,\"10\":3,\"12\":1,\"15\":1,\"21\":2,\"24\":3,\"26\":3,\"28\":1,\"29\":1,\"31\":1,\"34\":2,\"42\":2,\"43\":3,\"46\":2,\"47\":1,\"48\":12,\"50\":1,\"58\":14,\"59\":3,\"60\":1,\"65\":1}}],[\"你\",{\"1\":{\"0\":1,\"42\":2,\"43\":2}}],[\"将\",{\"1\":{\"0\":1,\"29\":1,\"34\":1,\"43\":1,\"48\":1,\"50\":2,\"58\":2}}],[\"页面\",{\"1\":{\"65\":1}}],[\"页\",{\"0\":{\"0\":1}}],[\"介绍\",{\"0\":{\"0\":1},\"1\":{\"0\":1,\"21\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
