import{_ as n,o as s,c as a,d as t}from"./app-A6Lz_ld8.js";const p={},e=t(`<h1 id="使用maven插件打包-docker镜像到-docker-desktop" tabindex="-1"><a class="header-anchor" href="#使用maven插件打包-docker镜像到-docker-desktop"><span>使用Maven插件打包 Docker镜像到 Docker Desktop</span></a></h1><h2 id="dokcer-开启远程访问" tabindex="-1"><a class="header-anchor" href="#dokcer-开启远程访问"><span><strong>Dokcer 开启远程访问</strong></span></a></h2><ul><li><p>在<code>Docker Desktop</code> 程序中，设置-General-勾选 “Expose daemon on tcp://localhost:2375 without TLS”</p></li><li><p>本地IP与<code>2375</code>端口代理配置</p><p>如果用的网线就使用以太网的IP，用的是WIFI就使用无线局域网IP地址。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 使用cmd管理员命令执行，%EXPOSE_IP% 替换为上面获取的IP</span>
netsh interface portproxy <span class="token function">add</span> v4tov4 <span class="token assign-left variable">listenport</span><span class="token operator">=</span><span class="token number">2375</span> <span class="token assign-left variable">listenaddress</span><span class="token operator">=</span>%EXPOSE_IP% <span class="token assign-left variable">connectaddress</span><span class="token operator">=</span><span class="token number">127.0</span>.0.1 <span class="token assign-left variable">connectport</span><span class="token operator">=</span><span class="token number">2375</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>验证当前配置</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 使用该命令查询端口代理配置</span>
netsh interface portproxy show all

<span class="token comment"># 测试</span>
Test-NetConnection <span class="token parameter variable">-ComputerName</span> %EXPOSE_IP% <span class="token parameter variable">-Port</span> <span class="token number">2375</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="maven插件配置" tabindex="-1"><a class="header-anchor" href="#maven插件配置"><span><strong>Maven插件配置</strong></span></a></h2><ul><li>其中docker 的远程地址即是上面获取的IP: <code>%EXPOSE_IP% </code></li><li>SpringBoot项目所需的环境地址比如：mysql、redis，它们的IP也需要替换为：<code>%EXPOSE_IP% </code></li><li>插件中配置的暴露的端口号，也是项目的端口号，也是在启动镜像时需要配置的向外暴露的端口号</li></ul><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.fabric8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>docker-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${docker.maven.plugin.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>executions</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--如果想在项目打包时构建镜像添加--&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>execution</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>build-image<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>phase</span><span class="token punctuation">&gt;</span></span>package<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>phase</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goals</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goal</span><span class="token punctuation">&gt;</span></span>build<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goal</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goals</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>execution</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>executions</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- Docker 远程管理地址--&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dockerHost</span><span class="token punctuation">&gt;</span></span>\${docker.host}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dockerHost</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>images</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span><span class="token punctuation">&gt;</span></span>
                <span class="token comment">&lt;!--定义镜像名称--&gt;</span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>fortress/\${project.name}:\${project.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
                <span class="token comment">&lt;!--定义镜像构建行为--&gt;</span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>
                    <span class="token comment">&lt;!--定义基础镜像--&gt;</span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>from</span><span class="token punctuation">&gt;</span></span>java:openjdk-8u111<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>from</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>args</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>JAR_FILE</span><span class="token punctuation">&gt;</span></span>\${project.build.finalName}.jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>JAR_FILE</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>args</span><span class="token punctuation">&gt;</span></span>
                    <span class="token comment">&lt;!--定义哪些文件拷贝到容器中--&gt;</span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>assembly</span><span class="token punctuation">&gt;</span></span>
                        <span class="token comment">&lt;!--定义拷贝到容器的目录--&gt;</span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>targetDir</span><span class="token punctuation">&gt;</span></span>/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>targetDir</span><span class="token punctuation">&gt;</span></span>
                        <span class="token comment">&lt;!--只拷贝生成的jar包--&gt;</span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>descriptorRef</span><span class="token punctuation">&gt;</span></span>artifact<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>descriptorRef</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>assembly</span><span class="token punctuation">&gt;</span></span>
                    <span class="token comment">&lt;!-- 暴露的端口号 --&gt;</span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ports</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>port</span><span class="token punctuation">&gt;</span></span>8081<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>port</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ports</span><span class="token punctuation">&gt;</span></span>
                    <span class="token comment">&lt;!--定义容器启动命令--&gt;</span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>entryPoint</span><span class="token punctuation">&gt;</span></span>[&quot;java&quot;,&quot;-jar&quot;,&quot;/\${project.build.finalName}.jar&quot;]<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>entryPoint</span><span class="token punctuation">&gt;</span></span>
                    <span class="token comment">&lt;!--定义维护者--&gt;</span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maintainer</span><span class="token punctuation">&gt;</span></span>mxoop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maintainer</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>image</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>images</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),o=[e];function l(c,i){return s(),a("div",null,o)}const k=n(p,[["render",l],["__file","docker_maven.html.vue"]]),r=JSON.parse('{"path":"/deploy/docker_maven.html","title":"使用Maven插件打包 Docker镜像到 Docker Desktop","lang":"zh-CN","frontmatter":{"order":8,"star":true,"date":"2024-10-12T00:00:00.000Z","copyright":false,"footer":true,"category":["deploy"],"tag":["deploy","dockr"]},"headers":[{"level":2,"title":"Dokcer 开启远程访问","slug":"dokcer-开启远程访问","link":"#dokcer-开启远程访问","children":[]},{"level":2,"title":"Maven插件配置","slug":"maven插件配置","link":"#maven插件配置","children":[]}],"git":{"createdTime":1728722362000,"updatedTime":1728722362000,"contributors":[{"name":"mxoop","email":"1592013653@qq.com","commits":1}]},"readingTime":{"minutes":1.41,"words":422},"filePathRelative":"deploy/docker_maven.md","localizedDate":"2024年10月12日","excerpt":"\\n<h2><strong>Dokcer 开启远程访问</strong></h2>\\n<ul>\\n<li>\\n<p>在<code>Docker Desktop</code> 程序中，设置-General-勾选 “Expose daemon on tcp://localhost:2375 without TLS”</p>\\n</li>\\n<li>\\n<p>本地IP与<code>2375</code>端口代理配置</p>\\n<p>如果用的网线就使用以太网的IP，用的是WIFI就使用无线局域网IP地址。</p>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token comment\\"># 使用cmd管理员命令执行，%EXPOSE_IP% 替换为上面获取的IP</span>\\nnetsh interface portproxy <span class=\\"token function\\">add</span> v4tov4 <span class=\\"token assign-left variable\\">listenport</span><span class=\\"token operator\\">=</span><span class=\\"token number\\">2375</span> <span class=\\"token assign-left variable\\">listenaddress</span><span class=\\"token operator\\">=</span>%EXPOSE_IP% <span class=\\"token assign-left variable\\">connectaddress</span><span class=\\"token operator\\">=</span><span class=\\"token number\\">127.0</span>.0.1 <span class=\\"token assign-left variable\\">connectport</span><span class=\\"token operator\\">=</span><span class=\\"token number\\">2375</span>\\n</code></pre></div></li>\\n<li>\\n<p>验证当前配置</p>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token comment\\"># 使用该命令查询端口代理配置</span>\\nnetsh interface portproxy show all\\n\\n<span class=\\"token comment\\"># 测试</span>\\nTest-NetConnection <span class=\\"token parameter variable\\">-ComputerName</span> %EXPOSE_IP% <span class=\\"token parameter variable\\">-Port</span> <span class=\\"token number\\">2375</span>\\n</code></pre></div></li>\\n</ul>"}');export{k as comp,r as data};
