import{_ as t,r as l,o as i,c as r,a,e as s,f as n,d as p}from"./app-D_rNMysR.js";const o={},c=a("h1",{id:"gitlab-安装部署",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#gitlab-安装部署"},[a("span",null,"Gitlab 安装部署")])],-1),d=a("hr",null,null,-1),u=a("p",null,"安装Gitlab 参考官网及博客链接",-1),b={href:"https://about.gitlab.com/install/#ubuntu",target:"_blank",rel:"noopener noreferrer"},v={href:"https://cloud.tencent.com/developer/article/1486766",target:"_blank",rel:"noopener noreferrer"},g={href:"https://packages.gitlab.com/gitlab/gitlab-ce",target:"_blank",rel:"noopener noreferrer"},m=p(`<h2 id="gitlab配置" tabindex="-1"><a class="header-anchor" href="#gitlab配置"><span>Gitlab配置</span></a></h2><h3 id="更换gitlab-ip地址" tabindex="-1"><a class="header-anchor" href="#更换gitlab-ip地址"><span>更换gitlab ip地址</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">#打开gitlab.rb 文件</span>
<span class="token builtin class-name">cd</span> /etc/gitlab
<span class="token function">vim</span> gitlab.rb

<span class="token comment">#设置访问链接，搜索关键词external_url，修改url为你本地的IP</span>
external_url <span class="token string">&#39;http://{你的IP}&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="修改端口" tabindex="-1"><a class="header-anchor" href="#修改端口"><span>修改端口</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">#由于GitLab默认在80端口，可能和本地服务冲突，可以选择其他端口号替代。</span>
<span class="token comment">#搜索关键词nginx[&#39;listen_port&#39;]，修改端口为指定端口10001</span>
nginx<span class="token punctuation">[</span><span class="token string">&#39;listen_port&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">8099</span>
	
<span class="token comment">#修改端口后为了保持统一，需要将访问链接修改成加上端口号的url</span>
external_url <span class="token string">&#39;http://{你的IP}:{你的端口号}&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>以上配置，需要执行以下命令才能生效。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> gitlab-ctl reconfigure
<span class="token function">sudo</span> gitlab-ctl restart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令"><span>常用命令</span></a></h3><table><thead><tr><th style="text-align:left;">命令</th><th style="text-align:left;">作用</th></tr></thead><tbody><tr><td style="text-align:left;">gitlab-ctl reconfigure</td><td style="text-align:left;">修改gitlab.rb文件之后重新加载配置</td></tr><tr><td style="text-align:left;">gitlab-ctl status</td><td style="text-align:left;">查看 GitLab 状态</td></tr><tr><td style="text-align:left;">gitlab-ctl start</td><td style="text-align:left;">启动 GitLab</td></tr><tr><td style="text-align:left;">gitlab-ctl stop</td><td style="text-align:left;">停止 GitLab</td></tr><tr><td style="text-align:left;">gitlab-ctl restart</td><td style="text-align:left;">重启 GitLab</td></tr><tr><td style="text-align:left;">gitlab-ctl tail</td><td style="text-align:left;">查看所有日志</td></tr><tr><td style="text-align:left;">gitlab-ctl tail nginx/gitlab_acces.log</td><td style="text-align:left;">查看 nginx 访问日志</td></tr><tr><td style="text-align:left;">gitlab-ctl tail postgresql</td><td style="text-align:left;">查看 postgresql 日志</td></tr></tbody></table><h3 id="备份gitlab" tabindex="-1"><a class="header-anchor" href="#备份gitlab"><span>备份Gitlab</span></a></h3><h4 id="创建备份文件" tabindex="-1"><a class="header-anchor" href="#创建备份文件"><span>创建备份文件</span></a></h4><ul><li>使用下列命令创建GitLab备份</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>sudo gitlab<span class="token operator">-</span>rake gitlab<span class="token operator">:</span>backup<span class="token operator">:</span>create
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>然后便会在 <code>/var/opt/gitlab/backups</code>目录下创建一个类似于<em>15504156082019021711.5.1gitlabbackup.tar</em>的文件. 其中开头部分是创建的日期.</li></ul><h4 id="修改备份目录" tabindex="-1"><a class="header-anchor" href="#修改备份目录"><span>修改备份目录</span></a></h4><ul><li>首先打开gitlab.rb文件</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>cd <span class="token operator">/</span>etc<span class="token operator">/</span>gitlab
vim gitlab<span class="token punctuation">.</span>rb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>找到下列命令</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>gitlab_rails<span class="token punctuation">[</span><span class="token string">&#39;backup_path&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;/var/opt/gitlab/backups&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>然后修改后面的地址即可. 修改完成之后重启配置文件生效.</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>sudo gitlab<span class="token operator">-</span>ctl reconfigure
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="设置自动备份机制" tabindex="-1"><a class="header-anchor" href="#设置自动备份机制"><span>设置自动备份机制</span></a></h4><p>手动备份过于麻烦, 所以通过crontab设置自动备份. crontab文件之中, 每一行表示一项任务, 每行的每个字段表示一项设置. crontab共6个字段, 其中前5个字段设置执行的时间段, 第6个字段设置命令.</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>m h dom mon dow user user command
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中</p><blockquote><p>m： 表示分钟，可以是从0到59之间的任何整数。 h：表示小时，可以是从0到23之间的任何整数。 dom：表示日期，可以是从1到31之间的任何整数。 mon：表示月份，可以是从1到12之间的任何整数。 dow：表示星期几，可以是从0到7之间的任何整数，这里的0或7代表星期日。 user : 表示执行的用户。 command：要执行的命令，可以是系统命令，也可以是自己编写的脚本文件(如shell文件)。</p></blockquote><ul><li>现在我们来实现每天23点自动备份GitLab文件, crontab命令如下</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>sudo vim <span class="token operator">/</span>etc<span class="token operator">/</span>crontab

<span class="token number">0</span> <span class="token number">23</span> <span class="token operator">*</span> <span class="token operator">*</span> <span class="token operator">*</span> <span class="token operator">/</span>opt<span class="token operator">/</span>gitlab<span class="token operator">/</span>bin<span class="token operator">/</span>gitlab<span class="token operator">-</span>rake gitlab<span class="token operator">:</span>backup<span class="token operator">:</span>create <span class="token constant">CRON</span><span class="token operator">=</span><span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>为保证安全, 使用<strong>双备份机制</strong>. 所以再加一个crontab任务, 设置每天23点1分, 将生成的gitlab文件放到外置硬盘之中, crontab命令如下</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token number">1</span> <span class="token number">23</span> <span class="token operator">*</span> <span class="token operator">*</span> <span class="token operator">*</span> cp <span class="token operator">-</span>rf <span class="token operator">/</span><span class="token keyword">var</span><span class="token operator">/</span>opt<span class="token operator">/</span>gitlab<span class="token operator">/</span>backups<span class="token comment">/* /media/cciip/新加卷1/gitlab_backup/
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>编辑完/etc/crontab文件之后, 需要重新启动crontab服务, 命令如下</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code># 重新加载cron配置文件
sudo service cron reload
# 重启cron服务
sudo service cron restart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>至此, 便能进行自动备份, 而且是双备份机制.</p><h4 id="设置备份过期时间" tabindex="-1"><a class="header-anchor" href="#设置备份过期时间"><span>设置备份过期时间</span></a></h4><p>GitLab每天在备份, 文件会一直增大, 所以最好设置个过期时间, 比如7天.</p><ul><li>首先打开/etc/gitlab/gitlab.rb文件</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>cd <span class="token operator">/</span>etc<span class="token operator">/</span>gitlab
sudo vim gitlab<span class="token punctuation">.</span>rb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>找到下列命令</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code># gitlab_rails<span class="token punctuation">[</span><span class="token string">&#39;backup_keep_time&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">604800</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>修改为</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code># <span class="token number">604800</span> <span class="token operator">=</span> <span class="token number">60</span><span class="token operator">*</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">24</span><span class="token operator">*</span><span class="token number">7</span>
gitlab_rails<span class="token punctuation">[</span><span class="token string">&#39;backup_keep_time&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">604800</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>最后重启GitLab配置文件即可.</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>sudo gitlab<span class="token operator">-</span>ctl reconfigure
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="恢复备份文件" tabindex="-1"><a class="header-anchor" href="#恢复备份文件"><span>恢复备份文件</span></a></h4><ul><li>如果想要将GitLab服务器迁移到其他主机上, 首先确保新服务器GitLab版本和老服务器GitLab版本相同.</li></ul><p>然后copy备份文件到新服务器上. 比如此时我把192.168.1.25服务器上的备份文件拷贝到192.168.1.24上面, 可以通过如下命令进行.</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>scp <span class="token operator">/</span><span class="token keyword">var</span><span class="token operator">/</span>opt<span class="token operator">/</span>gitlab<span class="token operator">/</span>backups<span class="token operator">/</span><span class="token number">1550415608_2019_02_17_11.5</span><span class="token punctuation">.</span>1_gitlab_backup<span class="token punctuation">.</span>tar root@<span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.24</span><span class="token operator">:</span><span class="token operator">/</span><span class="token keyword">var</span><span class="token operator">/</span>opt<span class="token operator">/</span>gitlab<span class="token operator">/</span>backups
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>然后在192.168.1.24服务器上进行如下操作 <ul><li>将备份文件权限改为777</li></ul></li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>chmod <span class="token number">777</span> <span class="token number">1550415608_2019_02_17_11.5</span><span class="token punctuation">.</span>1_gitlab_backup<span class="token punctuation">.</span>tar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>执行命令停止相关数据连接服务</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>gitlab<span class="token operator">-</span>ctl stop unicorn
gitlab<span class="token operator">-</span>ctl stop sidekiq
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>执行命令从备份文件中恢复GitLab</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>gitlab<span class="token operator">-</span>rake gitlab<span class="token operator">:</span>backup<span class="token operator">:</span>restore <span class="token constant">BACKUP</span><span class="token operator">=</span><span class="token number">1550415608_2019_02_17_11.5</span><span class="token punctuation">.</span>1_gitlab_backup<span class="token punctuation">.</span>tar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>最后启动GitLab服务器即可</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>sudo gitlab<span class="token operator">-</span>ctl start
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,54);function k(h,_){const e=l("ExternalLinkIcon");return i(),r("div",null,[c,d,a("blockquote",null,[u,a("p",null,[s("官网："),a("a",b,[s("Download and install GitLab | GitLab"),n(e)])]),a("p",null,[s("博客："),a("a",v,[s("Ubuntu16.04搭建GitLab服务器教程-腾讯云开发者社区-腾讯云 (tencent.com)"),n(e)])]),a("p",null,[s("社区版："),a("a",g,[s("GitLab-ce"),n(e)])])]),m])}const x=t(o,[["render",k],["__file","gitlab_deploy.html.vue"]]),f=JSON.parse('{"path":"/deploy/gitlab_deploy.html","title":"Gitlab 安装部署","lang":"zh-CN","frontmatter":{"order":5,"star":true,"date":"2024-04-01T00:00:00.000Z","copyright":false,"footer":true,"category":["deploy"],"tag":["deploy","git"]},"headers":[{"level":2,"title":"Gitlab配置","slug":"gitlab配置","link":"#gitlab配置","children":[{"level":3,"title":"更换gitlab ip地址","slug":"更换gitlab-ip地址","link":"#更换gitlab-ip地址","children":[]},{"level":3,"title":"修改端口","slug":"修改端口","link":"#修改端口","children":[]},{"level":3,"title":"常用命令","slug":"常用命令","link":"#常用命令","children":[]},{"level":3,"title":"备份Gitlab","slug":"备份gitlab","link":"#备份gitlab","children":[]}]}],"git":{"createdTime":1712219267000,"updatedTime":1712219267000,"contributors":[{"name":"mxoop","email":"1592013653@qq.com","commits":1}]},"readingTime":{"minutes":3.73,"words":1119},"filePathRelative":"deploy/gitlab_deploy.md","localizedDate":"2024年4月1日","excerpt":"\\n<hr>\\n<blockquote>\\n<p>安装Gitlab 参考官网及博客链接</p>\\n<p>官网：<a href=\\"https://about.gitlab.com/install/#ubuntu\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Download and install GitLab | GitLab</a></p>\\n<p>博客：<a href=\\"https://cloud.tencent.com/developer/article/1486766\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Ubuntu16.04搭建GitLab服务器教程-腾讯云开发者社区-腾讯云 (tencent.com)</a></p>\\n<p>社区版：<a href=\\"https://packages.gitlab.com/gitlab/gitlab-ce\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">GitLab-ce</a></p>\\n</blockquote>"}');export{x as comp,f as data};
